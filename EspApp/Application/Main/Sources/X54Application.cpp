/*!*****************************************************************************
*
* @file X54Application.c
*
* @brief Main entry point of HEM-X54-S01
*
* @author Ultratronik GmbH
*         Dornierstr. 9
*         D-82205 Gilching
*         www.ultratronik.de
*
* @author Gerd Esser, Forschung & Entwicklung
*
* @created 24.10.2019
*
* @copyright Copyright 2019 by Ultratronik GmbH.
*            All rights reserved.
*            None of this file or parts of it may be
*            copied, redistributed or used in any other way
*            without written approval of Ultratronik GmbH.
*
*******************************************************************************/

/*##*************************************************************************************************************************************************************
 *      Includes
 **************************************************************************************************************************************************************/

#include "X54Application.h"

#include <stdio.h>

#include <freertos/FreeRTOS.h>
#include <freertos/task.h>

#include "X54AppGlobals.h"

#include "../../build/version.h"

#include "EspI2c.h"
#include "EspLog.h"
#include "SessionManager.h"

/*!************************************************************************************************************************************************************
 *      Local function declarations
 *************************************************************************************************************************************************************/

X54Application x54App;
constexpr char X54Application::c_pszSoftwareId[];

#define I2C_MASTER_FREQ_HZ              100000
#define I2C_MASTER_TX_BUF_DISABLE       0                               /*!< I2C master doesn't need buffer */
#define I2C_MASTER_RX_BUF_DISABLE       0                               /*!< I2C master doesn't need buffer */

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

extern "C" void app_main()
{
    x54App.appMain();
}

/*##*************************************************************************************************************************************************************
 *      Begin of implementation
 **************************************************************************************************************************************************************/

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

X54Application::X54Application()
    : UxEspCppLibrary::EspApplication( "X54Application" )
    , m_loggerTask( this )
    , m_healthMonitorTask( this )
    , m_gpioDrvTask( this )
    , m_spiDisplayDrvTask( this )
    , m_httpServerTask( this )
    , m_webSocketCommTask( this )
    , m_webSocketServerTask( this )
    , m_pluginTaskAt24c16( this,
                           PLUGIN_AT26C14_TASK_PRIORITY,
                           I2C_MASTER_PORT )
    , m_pluginTaskWifiConnector( this,
                                 PLUGIN_WIFI_TASK_PRIORITY )
    , m_systemStateCtrlTask( this,
                             &m_pluginTaskAt24c16,
                             &m_pluginTaskWifiConnector )
{
    registerTask( &m_systemStateCtrlTask );
    registerTask( &m_loggerTask );
    registerTask( &m_healthMonitorTask );
    registerTask( &m_gpioDrvTask );
    registerTask( &m_spiDisplayDrvTask );
    registerTask( &m_httpServerTask );
    registerTask( &m_webSocketCommTask );
    registerTask( &m_webSocketServerTask );
    registerTask( &m_pluginTaskAt24c16 );
    registerTask( &m_pluginTaskWifiConnector );
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

X54Application::~X54Application()
{
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

void X54Application::createApp()
{
    printf( "\n"
            "=====================================================\n"
            "HEM-X54-S01 Version V%s from %s\n"
            "Build %s (%s) from %s on branch %s\n"
            "Copyright 2020 by Hemro\n"
            "=====================================================\n\n",
            VERSION_NO,
            VERSION_DATE,
            BUILD_NO,
            DEV_STATE,
            BUILD_DATE,
            BRANCH );

    ESP_ERROR_CHECK( UxEspCppLibrary::EspI2c::initMaster( I2C_MASTER_PORT,
                                                          GPIO_IO04_I2C_SDA_N,
                                                          GPIO_PULLUP_ENABLE,
                                                          GPIO_IO00_I2C_SCL_N,
                                                          GPIO_PULLUP_ENABLE,
                                                          I2C_MASTER_FREQ_HZ ) );

    // Initialize SPI FFS
    ESP_ERROR_CHECK( mountSpiFfs( SPIFFS_BASE_PATH, SPIFFS_LABEL ) );

    // create session manager
    SessionManager::singleton()->cyclicInvalidate();

}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

LoggerTask & X54Application::loggerTask()
{
    return m_loggerTask;
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

HealthMonitorTask & X54Application::healthMonitorTask()
{
    return m_healthMonitorTask;
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

GpioDrvTask & X54Application::gpioDrvTask()
{
    return m_gpioDrvTask;
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

SpiDisplayDrvTask & X54Application::spiDisplayDrvTask()
{
    return m_spiDisplayDrvTask;
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

HttpServerTask & X54Application::httpServerTask()
{
    return m_httpServerTask;
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

WebSocketCommTask & X54Application::webSocketCommTask()
{
    return m_webSocketCommTask;
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

WebSocketServerTask & X54Application::webSocketServerTask()
{
    return m_webSocketServerTask;
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

SystemStateCtrlTask & X54Application::systemStateCtrlTask()
{
    return m_systemStateCtrlTask;
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

UxEspCppLibrary::PluginTaskAt24c16 & X54Application::pluginTaskAt24c16()
{
    return m_pluginTaskAt24c16;
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

UxEspCppLibrary::PluginTaskWifiConnector & X54Application::pluginTaskWifiConnector()
{
    return m_pluginTaskWifiConnector;
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/
