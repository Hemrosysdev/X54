/** Generated by YAKINDU Statechart Tools code generator. */

#include "SystemStateMachine.h"

/*! \file Implementation of the state machine 'SystemStateMachine'
 */


const sc_integer SystemStateMachine::Application::mainStateInit         = 0;
const sc_integer SystemStateMachine::Application::mainStateDisplayTest  = 1;
const sc_integer SystemStateMachine::Application::mainStateManual       = 2;
const sc_integer SystemStateMachine::Application::mainStateTemp         = 3;
const sc_integer SystemStateMachine::Application::mainStateDiskDistance = 4;
const sc_integer SystemStateMachine::Application::mainStateErrors       = 5;
const sc_integer SystemStateMachine::Application::mainStateWifi         = 6;
const sc_integer SystemStateMachine::Application::mainStateSec          = 7;
const sc_integer SystemStateMachine::Application::mainStateOzen         = 8;
const sc_integer SystemStateMachine::Application::mainStateGram         = 9;
const sc_integer SystemStateMachine::Application::mainStateRecipe4      = 10;
const sc_integer SystemStateMachine::Application::mainStateRecipe3      = 11;
const sc_integer SystemStateMachine::Application::mainStateRecipe2      = 12;
const sc_integer SystemStateMachine::Application::mainStateRecipe1      = 13;
const sc_integer SystemStateMachine::Application::mainStateStandby      = 14;


SystemStateMachine::SystemStateMachine()  :
    tempDurationCounter( 0 ),
    startButtonShortPress_raised( false ),
    startButtonLongPress_raised( false ),
    portaFilterSaveInserted_raised( false ),
    jogDialVeryLongPress_raised( false ),
    jogDialLongPress_raised( false ),
    jogDialShortPress_raised( false ),
    bothButtonsPressed_raised( false ),
    bothButtonsReleased_raised( false ),
    bothButtonsLongPress_raised( false ),
    bothButtonsLongReleased_raised( false ),
    manualForceStandby_raised( false ),
    finishGrinding_raised( false ),
    standbyStarted_raised( false ),
    standbyTerminated_raised( false ),
    timeoutEditMode_raised( false ),
    timerService( sc_null ),
    ifaceTraceObserver( 0 ),
    ifaceDisplay( sc_null ),
    ifaceApplication( sc_null ),
    ifaceGpioDrv( sc_null ),
    ifaceWifi( sc_null ),
    ifaceErrorCtrl( sc_null ),
    ifaceConfig( sc_null ),
    ifaceStatistic( sc_null ),
    ifaceGrinder( sc_null ),
    isExecuting( false ),
    stateConfVectorPosition( 0 )
{
    this->ifaceDisplay.parent     = this;
    this->ifaceApplication.parent = this;
    this->ifaceGpioDrv.parent     = this;
    this->ifaceWifi.parent        = this;
    this->ifaceErrorCtrl.parent   = this;
    this->ifaceConfig.parent      = this;
    this->ifaceStatistic.parent   = this;
    this->ifaceGrinder.parent     = this;
    for ( sc_ushort i = 0; i < maxOrthogonalStates; ++i ) {
        stateConfVector[i] = SystemStateMachine_last_state;
    }

    clearInEvents();
    clearInternalEvents();
}

SystemStateMachine::~SystemStateMachine()
{
}

SystemStateMachine::Display::Display( SystemStateMachine * parent ) :
    parent( parent ),
    ifaceDisplayOperationCallback( sc_null )
{
}

SystemStateMachine::Application::Application( SystemStateMachine * parent ) :
    mainState( 0 ),
    initCompleted_raised( false ),
    mainStateChanged_raised( false ),
    restartStandbyTimer_raised( false ),
    forceRunCycle_raised( false ),
    parent( parent ),
    ifaceApplicationOperationCallback( sc_null )
{
}

SystemStateMachine::GpioDrv::GpioDrv( SystemStateMachine * parent ) :
    motorOn( false ),
    anyUserAction_raised( false ),
    startButtonPressed_raised( false ),
    startButtonReleased_raised( false ),
    jogDialLeft_raised( false ),
    jogDialRight_raised( false ),
    jogDialPressed_raised( false ),
    jogDialReleased_raised( false ),
    portaFilterRemoved_raised( false ),
    portaFilterInserted_raised( false ),
    powerAvailable_raised( false ),
    powerNotAvailable_raised( false ),
    terminateStandbyAction_raised( false ),
    parent( parent ),
    ifaceGpioDrvOperationCallback( sc_null )
{
}

SystemStateMachine::Wifi::Wifi( SystemStateMachine * parent ) :
    parent( parent ),
    ifaceWifiOperationCallback( sc_null )
{
}

SystemStateMachine::ErrorCtrl::ErrorCtrl( SystemStateMachine * parent ) :
    anyErrorChange_raised( false ),
    fatalErrorChange_raised( false ),
    significantErrorChange_raised( false ),
    parent( parent ),
    ifaceErrorCtrlOperationCallback( sc_null )
{
}

SystemStateMachine::Config::Config( SystemStateMachine * parent ) :
    parent( parent ),
    ifaceConfigOperationCallback( sc_null )
{
}

SystemStateMachine::Statistic::Statistic( SystemStateMachine * parent ) :
    parent( parent ),
    ifaceStatisticOperationCallback( sc_null )
{
}

SystemStateMachine::Grinder::Grinder( SystemStateMachine * parent ) :
    evtStopGrind_raised( false ),
    evtStartGrind_raised( false ),
    startRecipeEdit_raised( false ),
    recipeEditAborted_raised( false ),
    recipeEditFinished_raised( false ),
    parent( parent ),
    ifaceGrinderOperationCallback( sc_null )
{
}

using namespace systemstatemachine_events;

SctEvent * SystemStateMachine::getNextEvent()
{
    SctEvent * nextEvent = 0;

    if ( !internalEventQueue.empty() )
    {
        nextEvent = internalEventQueue.front();
        internalEventQueue.pop_front();
    }
    else if ( !inEventQueue.empty() )
    {
        nextEvent = inEventQueue.front();
        inEventQueue.pop_front();
    }

    return nextEvent;
}

void SystemStateMachine::dispatch_event( SctEvent * event )
{
    if ( event == 0 )
    {
        return;
    }
    switch ( event->name )
    {
        case Application_initCompleted:
        case Application_mainStateChanged:
        case Application_restartStandbyTimer:
        case Application_forceRunCycle:
        {
            ifaceApplication.dispatch_event( event );
            break;
        }
        case GpioDrv_anyUserAction:
        case GpioDrv_startButtonPressed:
        case GpioDrv_startButtonReleased:
        case GpioDrv_jogDialLeft:
        case GpioDrv_jogDialRight:
        case GpioDrv_jogDialPressed:
        case GpioDrv_jogDialReleased:
        case GpioDrv_portaFilterRemoved:
        case GpioDrv_portaFilterInserted:
        case GpioDrv_powerAvailable:
        case GpioDrv_powerNotAvailable:
        case GpioDrv_terminateStandbyAction:
        {
            ifaceGpioDrv.dispatch_event( event );
            break;
        }
        case ErrorCtrl_anyErrorChange:
        case ErrorCtrl_fatalErrorChange:
        case ErrorCtrl_significantErrorChange:
        {
            ifaceErrorCtrl.dispatch_event( event );
            break;
        }
        case Grinder_evtStopGrind:
        case Grinder_evtStartGrind:
        case Grinder_startRecipeEdit:
        case Grinder_recipeEditAborted:
        case Grinder_recipeEditFinished:
        {
            ifaceGrinder.dispatch_event( event );
            break;
        }
        case Internal_startButtonShortPress:
        case Internal_startButtonLongPress:
        case Internal_portaFilterSaveInserted:
        case Internal_jogDialVeryLongPress:
        case Internal_jogDialLongPress:
        case Internal_jogDialShortPress:
        case Internal_bothButtonsPressed:
        case Internal_bothButtonsReleased:
        case Internal_bothButtonsLongPress:
        case Internal_bothButtonsLongReleased:
        case Internal_manualForceStandby:
        case Internal_finishGrinding:
        case Internal_standbyStarted:
        case Internal_standbyTerminated:
        case Internal_timeoutEditMode:
        {
            internal_dispatch_event( event );
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_DisplayTest_time_event_0:
        {
            timeEvents[0] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_WiFi_time_event_0:
        {
            timeEvents[1] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_Errors_time_event_0:
        {
            timeEvents[2] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1_time_event_0:
        {
            timeEvents[3] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2_time_event_0:
        {
            timeEvents[4] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3_time_event_0:
        {
            timeEvents[5] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1_time_event_0:
        {
            timeEvents[6] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2_time_event_0:
        {
            timeEvents[7] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3_time_event_0:
        {
            timeEvents[8] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4_time_event_0:
        {
            timeEvents[9] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel_time_event_0:
        {
            timeEvents[10] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime_time_event_0:
        {
            timeEvents[11] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn_time_event_0:
        {
            timeEvents[12] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff_time_event_0:
        {
            timeEvents[13] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1_time_event_0:
        {
            timeEvents[14] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2_time_event_0:
        {
            timeEvents[15] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3_time_event_0:
        {
            timeEvents[16] = true;
            break;
        }
        case SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4_time_event_0:
        {
            timeEvents[17] = true;
            break;
        }
        case SystemStateMachine_SleepMode_NormalOperation_time_event_0:
        {
            timeEvents[18] = true;
            break;
        }
        case SystemStateMachine_SleepMode_NormalOperation_time_event_1:
        {
            timeEvents[19] = true;
            break;
        }
        case SystemStateMachine_KeyPressEvaluation_BothButtonsPressed_time_event_0:
        {
            timeEvents[20] = true;
            break;
        }
        case SystemStateMachine_KeyPressEvaluation_LongPress_r2_LongPressStartButton_time_event_0:
        {
            timeEvents[21] = true;
            break;
        }
        case SystemStateMachine_KeyPressEvaluation_LongPress_r2_StartButtonPressed_time_event_0:
        {
            timeEvents[22] = true;
            break;
        }
        case SystemStateMachine_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth_time_event_0:
        {
            timeEvents[23] = true;
            break;
        }
        case SystemStateMachine_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth_time_event_0:
        {
            timeEvents[24] = true;
            break;
        }
        case SystemStateMachine_KeyPressEvaluation_LongPress_r1_LongPressJogDial_time_event_0:
        {
            timeEvents[25] = true;
            break;
        }
        case SystemStateMachine_KeyPressEvaluation_LongPress_r1_JogDialPressed_time_event_0:
        {
            timeEvents[26] = true;
            break;
        }
        case SystemStateMachine_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth_time_event_0:
        {
            timeEvents[27] = true;
            break;
        }
        case SystemStateMachine_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth_time_event_0:
        {
            timeEvents[28] = true;
            break;
        }
        case SystemStateMachine_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial_time_event_0:
        {
            timeEvents[29] = true;
            break;
        }
        case SystemStateMachine_Grinding_Grinding_time_event_0:
        {
            timeEvents[30] = true;
            break;
        }
        case SystemStateMachine_Grinding_GrindingError_time_event_0:
        {
            timeEvents[31] = true;
            break;
        }
        case SystemStateMachine_Grinding_SaveGrindingResults_time_event_0:
        {
            timeEvents[32] = true;
            break;
        }
        default:
            break;
    }
    delete event;
}

void SystemStateMachine::Display::dispatch_event( SctEvent * event )
{
    switch ( event->name )
    {
        default:
            break;
    }
}

void SystemStateMachine::Application::dispatch_event( SctEvent * event )
{
    switch ( event->name )
    {
        case Application_initCompleted:
        {
            internal_raiseInitCompleted();
            break;
        }
        case Application_mainStateChanged:
        {
            internal_raiseMainStateChanged();
            break;
        }
        case Application_restartStandbyTimer:
        {
            internal_raiseRestartStandbyTimer();
            break;
        }
        case Application_forceRunCycle:
        {
            internal_raiseForceRunCycle();
            break;
        }
        default:
            break;
    }
}

void SystemStateMachine::GpioDrv::dispatch_event( SctEvent * event )
{
    switch ( event->name )
    {
        case GpioDrv_anyUserAction:
        {
            internal_raiseAnyUserAction();
            break;
        }
        case GpioDrv_startButtonPressed:
        {
            internal_raiseStartButtonPressed();
            break;
        }
        case GpioDrv_startButtonReleased:
        {
            internal_raiseStartButtonReleased();
            break;
        }
        case GpioDrv_jogDialLeft:
        {
            internal_raiseJogDialLeft();
            break;
        }
        case GpioDrv_jogDialRight:
        {
            internal_raiseJogDialRight();
            break;
        }
        case GpioDrv_jogDialPressed:
        {
            internal_raiseJogDialPressed();
            break;
        }
        case GpioDrv_jogDialReleased:
        {
            internal_raiseJogDialReleased();
            break;
        }
        case GpioDrv_portaFilterRemoved:
        {
            internal_raisePortaFilterRemoved();
            break;
        }
        case GpioDrv_portaFilterInserted:
        {
            internal_raisePortaFilterInserted();
            break;
        }
        case GpioDrv_powerAvailable:
        {
            internal_raisePowerAvailable();
            break;
        }
        case GpioDrv_powerNotAvailable:
        {
            internal_raisePowerNotAvailable();
            break;
        }
        case GpioDrv_terminateStandbyAction:
        {
            internal_raiseTerminateStandbyAction();
            break;
        }
        default:
            break;
    }
}

void SystemStateMachine::Wifi::dispatch_event( SctEvent * event )
{
    switch ( event->name )
    {
        default:
            break;
    }
}

void SystemStateMachine::ErrorCtrl::dispatch_event( SctEvent * event )
{
    switch ( event->name )
    {
        case ErrorCtrl_anyErrorChange:
        {
            internal_raiseAnyErrorChange();
            break;
        }
        case ErrorCtrl_fatalErrorChange:
        {
            internal_raiseFatalErrorChange();
            break;
        }
        case ErrorCtrl_significantErrorChange:
        {
            internal_raiseSignificantErrorChange();
            break;
        }
        default:
            break;
    }
}

void SystemStateMachine::Config::dispatch_event( SctEvent * event )
{
    switch ( event->name )
    {
        default:
            break;
    }
}

void SystemStateMachine::Statistic::dispatch_event( SctEvent * event )
{
    switch ( event->name )
    {
        default:
            break;
    }
}

void SystemStateMachine::Grinder::dispatch_event( SctEvent * event )
{
    switch ( event->name )
    {
        case Grinder_evtStopGrind:
        {
            internal_raiseEvtStopGrind();
            break;
        }
        case Grinder_evtStartGrind:
        {
            internal_raiseEvtStartGrind();
            break;
        }
        case Grinder_startRecipeEdit:
        {
            internal_raiseStartRecipeEdit();
            break;
        }
        case Grinder_recipeEditAborted:
        {
            internal_raiseRecipeEditAborted();
            break;
        }
        case Grinder_recipeEditFinished:
        {
            internal_raiseRecipeEditFinished();
            break;
        }
        default:
            break;
    }
}

void SystemStateMachine::internal_dispatch_event( SctEvent * event )
{
    switch ( event->name )
    {
        case Internal_startButtonShortPress:
        {
            internal_raiseStartButtonShortPress();
            break;
        }
        case Internal_startButtonLongPress:
        {
            internal_raiseStartButtonLongPress();
            break;
        }
        case Internal_portaFilterSaveInserted:
        {
            internal_raisePortaFilterSaveInserted();
            break;
        }
        case Internal_jogDialVeryLongPress:
        {
            internal_raiseJogDialVeryLongPress();
            break;
        }
        case Internal_jogDialLongPress:
        {
            internal_raiseJogDialLongPress();
            break;
        }
        case Internal_jogDialShortPress:
        {
            internal_raiseJogDialShortPress();
            break;
        }
        case Internal_bothButtonsPressed:
        {
            internal_raiseBothButtonsPressed();
            break;
        }
        case Internal_bothButtonsReleased:
        {
            internal_raiseBothButtonsReleased();
            break;
        }
        case Internal_bothButtonsLongPress:
        {
            internal_raiseBothButtonsLongPress();
            break;
        }
        case Internal_bothButtonsLongReleased:
        {
            internal_raiseBothButtonsLongReleased();
            break;
        }
        case Internal_manualForceStandby:
        {
            internal_raiseManualForceStandby();
            break;
        }
        case Internal_finishGrinding:
        {
            internal_raiseFinishGrinding();
            break;
        }
        case Internal_standbyStarted:
        {
            internal_raiseStandbyStarted();
            break;
        }
        case Internal_standbyTerminated:
        {
            internal_raiseStandbyTerminated();
            break;
        }
        case Internal_timeoutEditMode:
        {
            internal_raiseTimeoutEditMode();
            break;
        }
        default:
            break;
    }
}

SystemStateMachineEventName SystemStateMachine::getTimedEventName( sc_eventid evid )
{
    if ( evid == (sc_eventid)( &timeEvents[0] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_DisplayTest_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[1] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_WiFi_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[2] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_Errors_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[3] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[4] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[5] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[6] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[7] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[8] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[9] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[10] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[11] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[12] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[13] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[14] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[15] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[16] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[17] ) )
    {
        return SystemStateMachine_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[18] ) )
    {
        return SystemStateMachine_SleepMode_NormalOperation_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[19] ) )
    {
        return SystemStateMachine_SleepMode_NormalOperation_time_event_1;
    }
    if ( evid == (sc_eventid)( &timeEvents[20] ) )
    {
        return SystemStateMachine_KeyPressEvaluation_BothButtonsPressed_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[21] ) )
    {
        return SystemStateMachine_KeyPressEvaluation_LongPress_r2_LongPressStartButton_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[22] ) )
    {
        return SystemStateMachine_KeyPressEvaluation_LongPress_r2_StartButtonPressed_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[23] ) )
    {
        return SystemStateMachine_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[24] ) )
    {
        return SystemStateMachine_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[25] ) )
    {
        return SystemStateMachine_KeyPressEvaluation_LongPress_r1_LongPressJogDial_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[26] ) )
    {
        return SystemStateMachine_KeyPressEvaluation_LongPress_r1_JogDialPressed_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[27] ) )
    {
        return SystemStateMachine_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[28] ) )
    {
        return SystemStateMachine_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[29] ) )
    {
        return SystemStateMachine_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[30] ) )
    {
        return SystemStateMachine_Grinding_Grinding_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[31] ) )
    {
        return SystemStateMachine_Grinding_GrindingError_time_event_0;
    }
    if ( evid == (sc_eventid)( &timeEvents[32] ) )
    {
        return SystemStateMachine_Grinding_SaveGrindingResults_time_event_0;
    }
    return invalid_event;
}

sc_boolean SystemStateMachine::isActive() const
{
    return stateConfVector[0] != SystemStateMachine_last_state
           || stateConfVector[1] != SystemStateMachine_last_state
           || stateConfVector[2] != SystemStateMachine_last_state
           || stateConfVector[3] != SystemStateMachine_last_state
           || stateConfVector[4] != SystemStateMachine_last_state
           || stateConfVector[5] != SystemStateMachine_last_state
           || stateConfVector[6] != SystemStateMachine_last_state
           || stateConfVector[7] != SystemStateMachine_last_state;
}

/*
 * Always returns 'false' since this state machine can never become final.
 */
sc_boolean SystemStateMachine::isFinal() const
{
    return false;
}

sc_boolean SystemStateMachine::check()
{
    if ( timerService == sc_null )
    {
        return false;
    }
    if ( this->ifaceDisplay.ifaceDisplayOperationCallback == sc_null )
    {
        return false;
    }
    if ( this->ifaceApplication.ifaceApplicationOperationCallback == sc_null )
    {
        return false;
    }
    if ( this->ifaceGpioDrv.ifaceGpioDrvOperationCallback == sc_null )
    {
        return false;
    }
    if ( this->ifaceWifi.ifaceWifiOperationCallback == sc_null )
    {
        return false;
    }
    if ( this->ifaceErrorCtrl.ifaceErrorCtrlOperationCallback == sc_null )
    {
        return false;
    }
    if ( this->ifaceConfig.ifaceConfigOperationCallback == sc_null )
    {
        return false;
    }
    if ( this->ifaceStatistic.ifaceStatisticOperationCallback == sc_null )
    {
        return false;
    }
    if ( this->ifaceGrinder.ifaceGrinderOperationCallback == sc_null )
    {
        return false;
    }
    return true;
}

void SystemStateMachine::setTimerService( sc::timer::TimerServiceInterface * timerService )
{
    this->timerService = timerService;
}

sc::timer::TimerServiceInterface * SystemStateMachine::getTimerService()
{
    return timerService;
}

sc_integer SystemStateMachine::getNumberOfParallelTimeEvents()
{
    return parallelTimeEventsCount;
}

void SystemStateMachine::raiseTimeEvent( sc_eventid evid )
{
    if ( ( evid >= (sc_eventid)timeEvents )
         && ( evid < (sc_eventid)( &timeEvents[timeEventsCount] ) ) )
    {
        inEventQueue.push_back( new TimedSctEvent( getTimedEventName( evid ) ) );
        runCycle();
    }
}

sc_boolean SystemStateMachine::isStateActive( SystemStateMachineStates state ) const
{
    switch ( state )
    {
        case HemroE54SystemStateMachine_Init:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_INIT] == HemroE54SystemStateMachine_Init
                                  );
        case HemroE54SystemStateMachine_ManualMode:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_MANUALMODE] == HemroE54SystemStateMachine_ManualMode
                                  );
        case HemroE54SystemStateMachine_Recipe4:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_RECIPE4] == HemroE54SystemStateMachine_Recipe4
                                  );
        case HemroE54SystemStateMachine_Recipe3:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_RECIPE3] == HemroE54SystemStateMachine_Recipe3
                                  );
        case HemroE54SystemStateMachine_Recipe2:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_RECIPE2] == HemroE54SystemStateMachine_Recipe2
                                  );
        case HemroE54SystemStateMachine_Recipe1:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_RECIPE1] == HemroE54SystemStateMachine_Recipe1
                                  );
        case HemroE54SystemStateMachine_DisplayTest:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISPLAYTEST] == HemroE54SystemStateMachine_DisplayTest
                                  );
        case HemroE54SystemStateMachine_WiFi:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_WIFI] == HemroE54SystemStateMachine_WiFi
                                  );
        case HemroE54SystemStateMachine_Errors:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_ERRORS] == HemroE54SystemStateMachine_Errors
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT] >= HemroE54SystemStateMachine_AutoSleepEdit
                                  && stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT] <= HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOWBANNER1] == HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOWBANNER2] == HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOWBANNER3] == HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOW5MIN] == HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOW3MIN] == HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOWINTRO1] == HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOWINTRO2] == HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOWINTRO3] == HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOWINTRO4] == HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOW10MIN] == HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOW20MIN] == HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min
                                  );
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_AUTOSLEEPEDIT_R1_SHOW30MIN] == HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min
                                  );
        case HemroE54SystemStateMachine_WlanSettings:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_WLANSETTINGS] >= HemroE54SystemStateMachine_WlanSettings
                                  && stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_WLANSETTINGS] <= HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit );
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanOn:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_WLANSETTINGS_R1_WLANON] == HemroE54SystemStateMachine_WlanSettings_r1_WlanOn
                                  );
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanOff:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_WLANSETTINGS_R1_WLANOFF] == HemroE54SystemStateMachine_WlanSettings_r1_WlanOff
                                  );
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanReset:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_WLANSETTINGS_R1_WLANRESET] == HemroE54SystemStateMachine_WlanSettings_r1_WlanReset
                                  );
        case HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_WLANSETTINGS_R1_ANNOUNCEEDIT] == HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit
                                  );
        case HemroE54SystemStateMachine_EditRecipe1:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_EDITRECIPE1] == HemroE54SystemStateMachine_EditRecipe1
                                  );
        case HemroE54SystemStateMachine_EditRecipe2:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_EDITRECIPE2] == HemroE54SystemStateMachine_EditRecipe2
                                  );
        case HemroE54SystemStateMachine_EditRecipe3:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_EDITRECIPE3] == HemroE54SystemStateMachine_EditRecipe3
                                  );
        case HemroE54SystemStateMachine_EditRecipe4:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_EDITRECIPE4] == HemroE54SystemStateMachine_EditRecipe4
                                  );
        case HemroE54SystemStateMachine_GrindManual:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_GRINDMANUAL] == HemroE54SystemStateMachine_GrindManual
                                  );
        case HemroE54SystemStateMachine_GrindRecipe4:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_GRINDRECIPE4] == HemroE54SystemStateMachine_GrindRecipe4
                                  );
        case HemroE54SystemStateMachine_GrindRecipe3:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_GRINDRECIPE3] == HemroE54SystemStateMachine_GrindRecipe3
                                  );
        case HemroE54SystemStateMachine_GrindRecipe2:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_GRINDRECIPE2] == HemroE54SystemStateMachine_GrindRecipe2
                                  );
        case HemroE54SystemStateMachine_GrindRecipe1:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_GRINDRECIPE1] == HemroE54SystemStateMachine_GrindRecipe1
                                  );
        case HemroE54SystemStateMachine_Standby:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_STANDBY] == HemroE54SystemStateMachine_Standby
                                  );
        case HemroE54SystemStateMachine_DiscLifeTime:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME] >= HemroE54SystemStateMachine_DiscLifeTime
                                  && stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME] <= HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4 );
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME_R1_SHOWDISCLABEL] == HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel
                                  );
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME_R1_SHOWDISCLIFETIME] == HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime
                                  );
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME_R1_SHOWRESETON] == HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn
                                  );
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME_R1_SHOWRESETOFF] == HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff
                                  );
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME_R1_SHOWINTRO] >= HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro
                                  && stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME_R1_SHOWINTRO] <= HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4 );
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME_R1_SHOWINTRO_R1_SHOWDASH1] == HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1
                                  );
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME_R1_SHOWINTRO_R1_SHOWDASH2] == HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2
                                  );
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME_R1_SHOWINTRO_R1_SHOWDASH3] == HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3
                                  );
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4:
            return (sc_boolean) ( stateConfVector[SCVI_HEMROE54SYSTEMSTATEMACHINE_DISCLIFETIME_R1_SHOWINTRO_R1_SHOWDASH4] == HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4
                                  );
        case SleepMode_NormalOperation:
            return (sc_boolean) ( stateConfVector[SCVI_SLEEPMODE_NORMALOPERATION] == SleepMode_NormalOperation
                                  );
        case SleepMode_Standby:
            return (sc_boolean) ( stateConfVector[SCVI_SLEEPMODE_STANDBY] == SleepMode_Standby
                                  );
        case KeyPressEvaluation_BothButtonsPressed:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_BOTHBUTTONSPRESSED] == KeyPressEvaluation_BothButtonsPressed
                                  );
        case KeyPressEvaluation_LongPressBothButtons:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESSBOTHBUTTONS] == KeyPressEvaluation_LongPressBothButtons
                                  );
        case KeyPressEvaluation_LongPress:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS] >= KeyPressEvaluation_LongPress
                                  && stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS] <= KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial );
        case KeyPressEvaluation_LongPress_r2_StartButtonError:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R2_STARTBUTTONERROR] == KeyPressEvaluation_LongPress_r2_StartButtonError
                                  );
        case KeyPressEvaluation_LongPress_r2_LongPressStartButton:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R2_LONGPRESSSTARTBUTTON] == KeyPressEvaluation_LongPress_r2_LongPressStartButton
                                  );
        case KeyPressEvaluation_LongPress_r2_StartButtonPressed:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R2_STARTBUTTONPRESSED] == KeyPressEvaluation_LongPress_r2_StartButtonPressed
                                  );
        case KeyPressEvaluation_LongPress_r2_StartButtonReleased:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R2_STARTBUTTONRELEASED] == KeyPressEvaluation_LongPress_r2_StartButtonReleased
                                  );
        case KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R2_STARTBUTTONPRESSEDFROMBOTH] == KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth
                                  );
        case KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R2_STARTBUTTONLONGPRESSEDFROMBOTH] == KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth
                                  );
        case KeyPressEvaluation_LongPress_r1_JogDialError:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R1_JOGDIALERROR] == KeyPressEvaluation_LongPress_r1_JogDialError
                                  );
        case KeyPressEvaluation_LongPress_r1_LongPressJogDial:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R1_LONGPRESSJOGDIAL] == KeyPressEvaluation_LongPress_r1_LongPressJogDial
                                  );
        case KeyPressEvaluation_LongPress_r1_JogDialPressed:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R1_JOGDIALPRESSED] == KeyPressEvaluation_LongPress_r1_JogDialPressed
                                  );
        case KeyPressEvaluation_LongPress_r1_JogDialReleased:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R1_JOGDIALRELEASED] == KeyPressEvaluation_LongPress_r1_JogDialReleased
                                  );
        case KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R1_JOGDIALPRESSEDFROMBOTH] == KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth
                                  );
        case KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R1_JOGDIALLONGPRESSEDFROMBOTH] == KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth
                                  );
        case KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial:
            return (sc_boolean) ( stateConfVector[SCVI_KEYPRESSEVALUATION_LONGPRESS_R1_VERYLONGPRESSJOGDIAL] == KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial
                                  );
        case Grinding_Grinding:
            return (sc_boolean) ( stateConfVector[SCVI_GRINDING_GRINDING] == Grinding_Grinding
                                  );
        case Grinding_GrindingError:
            return (sc_boolean) ( stateConfVector[SCVI_GRINDING_GRINDINGERROR] == Grinding_GrindingError
                                  );
        case Grinding_Idle:
            return (sc_boolean) ( stateConfVector[SCVI_GRINDING_IDLE] == Grinding_Idle
                                  );
        case Grinding_SaveGrindingResults:
            return (sc_boolean) ( stateConfVector[SCVI_GRINDING_SAVEGRINDINGRESULTS] == Grinding_SaveGrindingResults
                                  );
        case PortaFilterInsertion_Idle:
            return (sc_boolean) ( stateConfVector[SCVI_PORTAFILTERINSERTION_IDLE] == PortaFilterInsertion_Idle
                                  );
        case RecipeEdit_OrthogonalRecipeEdit:
            return (sc_boolean) ( stateConfVector[SCVI_RECIPEEDIT_ORTHOGONALRECIPEEDIT] >= RecipeEdit_OrthogonalRecipeEdit
                                  && stateConfVector[SCVI_RECIPEEDIT_ORTHOGONALRECIPEEDIT] <= RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe );
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1:
            return (sc_boolean) ( stateConfVector[SCVI_RECIPEEDIT_ORTHOGONALRECIPEEDIT_R1_EDITDIGIT1] == RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1
                                  );
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2:
            return (sc_boolean) ( stateConfVector[SCVI_RECIPEEDIT_ORTHOGONALRECIPEEDIT_R1_EDITDIGIT2] == RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2
                                  );
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3:
            return (sc_boolean) ( stateConfVector[SCVI_RECIPEEDIT_ORTHOGONALRECIPEEDIT_R1_EDITDIGIT3] == RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3
                                  );
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe:
            return (sc_boolean) ( stateConfVector[SCVI_RECIPEEDIT_ORTHOGONALRECIPEEDIT_R1_EDITRECIPE] == RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe
                                  );
        case RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe:
            return (sc_boolean) ( stateConfVector[SCVI_RECIPEEDIT_ORTHOGONALRECIPEEDIT_R2_EDITRECIPE] == RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe
                                  );
        case RecipeEdit_Idle:
            return (sc_boolean) ( stateConfVector[SCVI_RECIPEEDIT_IDLE] == RecipeEdit_Idle
                                  );
        default:
            return false;
    }
}

SystemStateMachine::Display * SystemStateMachine::display()
{
    return &ifaceDisplay;
}

void SystemStateMachine::Display::setOperationCallback( OperationCallback * operationCallback )
{
    ifaceDisplayOperationCallback = operationCallback;
}

SystemStateMachine::Application * SystemStateMachine::application()
{
    return &ifaceApplication;
}

/* Functions for event initCompleted in interface Application */
void SystemStateMachine::Application::raiseInitCompleted()
{
    parent->inEventQueue.push_back( new SctEvent_Application_initCompleted( Application_initCompleted ) );
    parent->runCycle();
}

void SystemStateMachine::Application::internal_raiseInitCompleted()
{
    initCompleted_raised = true;
}

/* Functions for event mainStateChanged in interface Application */
void SystemStateMachine::Application::raiseMainStateChanged()
{
    parent->inEventQueue.push_back( new SctEvent_Application_mainStateChanged( Application_mainStateChanged ) );
    parent->runCycle();
}

void SystemStateMachine::Application::internal_raiseMainStateChanged()
{
    mainStateChanged_raised = true;
}

/* Functions for event restartStandbyTimer in interface Application */
void SystemStateMachine::Application::raiseRestartStandbyTimer()
{
    parent->inEventQueue.push_back( new SctEvent_Application_restartStandbyTimer( Application_restartStandbyTimer ) );
    parent->runCycle();
}

void SystemStateMachine::Application::internal_raiseRestartStandbyTimer()
{
    restartStandbyTimer_raised = true;
}

/* Functions for event forceRunCycle in interface Application */
void SystemStateMachine::Application::raiseForceRunCycle()
{
    parent->inEventQueue.push_back( new SctEvent_Application_forceRunCycle( Application_forceRunCycle ) );
    parent->runCycle();
}

void SystemStateMachine::Application::internal_raiseForceRunCycle()
{
    forceRunCycle_raised = true;
}

sc_integer SystemStateMachine::Application::getMainStateInit() const
{
    return mainStateInit;
}

sc_integer SystemStateMachine::Application::getMainStateDisplayTest() const
{
    return mainStateDisplayTest;
}

sc_integer SystemStateMachine::Application::getMainStateManual() const
{
    return mainStateManual;
}

sc_integer SystemStateMachine::Application::getMainStateTemp() const
{
    return mainStateTemp;
}

sc_integer SystemStateMachine::Application::getMainStateDiskDistance() const
{
    return mainStateDiskDistance;
}

sc_integer SystemStateMachine::Application::getMainStateErrors() const
{
    return mainStateErrors;
}

sc_integer SystemStateMachine::Application::getMainStateWifi() const
{
    return mainStateWifi;
}

sc_integer SystemStateMachine::Application::getMainStateSec() const
{
    return mainStateSec;
}

sc_integer SystemStateMachine::Application::getMainStateOzen() const
{
    return mainStateOzen;
}

sc_integer SystemStateMachine::Application::getMainStateGram() const
{
    return mainStateGram;
}

sc_integer SystemStateMachine::Application::getMainStateRecipe4() const
{
    return mainStateRecipe4;
}

sc_integer SystemStateMachine::Application::getMainStateRecipe3() const
{
    return mainStateRecipe3;
}

sc_integer SystemStateMachine::Application::getMainStateRecipe2() const
{
    return mainStateRecipe2;
}

sc_integer SystemStateMachine::Application::getMainStateRecipe1() const
{
    return mainStateRecipe1;
}

sc_integer SystemStateMachine::Application::getMainStateStandby() const
{
    return mainStateStandby;
}

sc_integer SystemStateMachine::Application::getMainState() const
{
    return mainState;
}

void SystemStateMachine::Application::setMainState( sc_integer value )
{
    this->mainState = value;
}

void SystemStateMachine::Application::setOperationCallback( OperationCallback * operationCallback )
{
    ifaceApplicationOperationCallback = operationCallback;
}

SystemStateMachine::GpioDrv * SystemStateMachine::gpioDrv()
{
    return &ifaceGpioDrv;
}

/* Functions for event anyUserAction in interface GpioDrv */
void SystemStateMachine::GpioDrv::raiseAnyUserAction()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_anyUserAction( GpioDrv_anyUserAction ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raiseAnyUserAction()
{
    anyUserAction_raised = true;
}

/* Functions for event startButtonPressed in interface GpioDrv */
void SystemStateMachine::GpioDrv::raiseStartButtonPressed()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_startButtonPressed( GpioDrv_startButtonPressed ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raiseStartButtonPressed()
{
    startButtonPressed_raised = true;
}

/* Functions for event startButtonReleased in interface GpioDrv */
void SystemStateMachine::GpioDrv::raiseStartButtonReleased()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_startButtonReleased( GpioDrv_startButtonReleased ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raiseStartButtonReleased()
{
    startButtonReleased_raised = true;
}

/* Functions for event jogDialLeft in interface GpioDrv */
void SystemStateMachine::GpioDrv::raiseJogDialLeft()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_jogDialLeft( GpioDrv_jogDialLeft ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raiseJogDialLeft()
{
    jogDialLeft_raised = true;
}

/* Functions for event jogDialRight in interface GpioDrv */
void SystemStateMachine::GpioDrv::raiseJogDialRight()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_jogDialRight( GpioDrv_jogDialRight ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raiseJogDialRight()
{
    jogDialRight_raised = true;
}

/* Functions for event jogDialPressed in interface GpioDrv */
void SystemStateMachine::GpioDrv::raiseJogDialPressed()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_jogDialPressed( GpioDrv_jogDialPressed ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raiseJogDialPressed()
{
    jogDialPressed_raised = true;
}

/* Functions for event jogDialReleased in interface GpioDrv */
void SystemStateMachine::GpioDrv::raiseJogDialReleased()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_jogDialReleased( GpioDrv_jogDialReleased ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raiseJogDialReleased()
{
    jogDialReleased_raised = true;
}

/* Functions for event portaFilterRemoved in interface GpioDrv */
void SystemStateMachine::GpioDrv::raisePortaFilterRemoved()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_portaFilterRemoved( GpioDrv_portaFilterRemoved ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raisePortaFilterRemoved()
{
    portaFilterRemoved_raised = true;
}

/* Functions for event portaFilterInserted in interface GpioDrv */
void SystemStateMachine::GpioDrv::raisePortaFilterInserted()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_portaFilterInserted( GpioDrv_portaFilterInserted ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raisePortaFilterInserted()
{
    portaFilterInserted_raised = true;
}

/* Functions for event powerAvailable in interface GpioDrv */
void SystemStateMachine::GpioDrv::raisePowerAvailable()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_powerAvailable( GpioDrv_powerAvailable ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raisePowerAvailable()
{
    powerAvailable_raised = true;
}

/* Functions for event powerNotAvailable in interface GpioDrv */
void SystemStateMachine::GpioDrv::raisePowerNotAvailable()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_powerNotAvailable( GpioDrv_powerNotAvailable ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raisePowerNotAvailable()
{
    powerNotAvailable_raised = true;
}

/* Functions for event terminateStandbyAction in interface GpioDrv */
void SystemStateMachine::GpioDrv::raiseTerminateStandbyAction()
{
    parent->inEventQueue.push_back( new SctEvent_GpioDrv_terminateStandbyAction( GpioDrv_terminateStandbyAction ) );
    parent->runCycle();
}

void SystemStateMachine::GpioDrv::internal_raiseTerminateStandbyAction()
{
    terminateStandbyAction_raised = true;
}

sc_boolean SystemStateMachine::GpioDrv::getMotorOn() const
{
    return motorOn;
}

void SystemStateMachine::GpioDrv::setMotorOn( sc_boolean value )
{
    this->motorOn = value;
}

void SystemStateMachine::GpioDrv::setOperationCallback( OperationCallback * operationCallback )
{
    ifaceGpioDrvOperationCallback = operationCallback;
}

SystemStateMachine::Wifi * SystemStateMachine::wifi()
{
    return &ifaceWifi;
}

void SystemStateMachine::Wifi::setOperationCallback( OperationCallback * operationCallback )
{
    ifaceWifiOperationCallback = operationCallback;
}

SystemStateMachine::ErrorCtrl * SystemStateMachine::errorCtrl()
{
    return &ifaceErrorCtrl;
}

/* Functions for event anyErrorChange in interface ErrorCtrl */
void SystemStateMachine::ErrorCtrl::raiseAnyErrorChange()
{
    parent->inEventQueue.push_back( new SctEvent_ErrorCtrl_anyErrorChange( ErrorCtrl_anyErrorChange ) );
    parent->runCycle();
}

void SystemStateMachine::ErrorCtrl::internal_raiseAnyErrorChange()
{
    anyErrorChange_raised = true;
}

/* Functions for event fatalErrorChange in interface ErrorCtrl */
void SystemStateMachine::ErrorCtrl::raiseFatalErrorChange()
{
    parent->inEventQueue.push_back( new SctEvent_ErrorCtrl_fatalErrorChange( ErrorCtrl_fatalErrorChange ) );
    parent->runCycle();
}

void SystemStateMachine::ErrorCtrl::internal_raiseFatalErrorChange()
{
    fatalErrorChange_raised = true;
}

/* Functions for event significantErrorChange in interface ErrorCtrl */
void SystemStateMachine::ErrorCtrl::raiseSignificantErrorChange()
{
    parent->inEventQueue.push_back( new SctEvent_ErrorCtrl_significantErrorChange( ErrorCtrl_significantErrorChange ) );
    parent->runCycle();
}

void SystemStateMachine::ErrorCtrl::internal_raiseSignificantErrorChange()
{
    significantErrorChange_raised = true;
}

void SystemStateMachine::ErrorCtrl::setOperationCallback( OperationCallback * operationCallback )
{
    ifaceErrorCtrlOperationCallback = operationCallback;
}

SystemStateMachine::Config * SystemStateMachine::config()
{
    return &ifaceConfig;
}

void SystemStateMachine::Config::setOperationCallback( OperationCallback * operationCallback )
{
    ifaceConfigOperationCallback = operationCallback;
}

SystemStateMachine::Statistic * SystemStateMachine::statistic()
{
    return &ifaceStatistic;
}

void SystemStateMachine::Statistic::setOperationCallback( OperationCallback * operationCallback )
{
    ifaceStatisticOperationCallback = operationCallback;
}

SystemStateMachine::Grinder * SystemStateMachine::grinder()
{
    return &ifaceGrinder;
}

/* Functions for event evtStopGrind in interface Grinder */
void SystemStateMachine::Grinder::raiseEvtStopGrind()
{
    parent->inEventQueue.push_back( new SctEvent_Grinder_evtStopGrind( Grinder_evtStopGrind ) );
    parent->runCycle();
}

void SystemStateMachine::Grinder::internal_raiseEvtStopGrind()
{
    evtStopGrind_raised = true;
}

/* Functions for event evtStartGrind in interface Grinder */
void SystemStateMachine::Grinder::raiseEvtStartGrind()
{
    parent->inEventQueue.push_back( new SctEvent_Grinder_evtStartGrind( Grinder_evtStartGrind ) );
    parent->runCycle();
}

void SystemStateMachine::Grinder::internal_raiseEvtStartGrind()
{
    evtStartGrind_raised = true;
}

/* Functions for event startRecipeEdit in interface Grinder */
void SystemStateMachine::Grinder::raiseStartRecipeEdit()
{
    parent->inEventQueue.push_back( new SctEvent_Grinder_startRecipeEdit( Grinder_startRecipeEdit ) );
    parent->runCycle();
}

void SystemStateMachine::Grinder::internal_raiseStartRecipeEdit()
{
    startRecipeEdit_raised = true;
}

/* Functions for event recipeEditAborted in interface Grinder */
void SystemStateMachine::Grinder::raiseRecipeEditAborted()
{
    parent->inEventQueue.push_back( new SctEvent_Grinder_recipeEditAborted( Grinder_recipeEditAborted ) );
    parent->runCycle();
}

void SystemStateMachine::Grinder::internal_raiseRecipeEditAborted()
{
    recipeEditAborted_raised = true;
}

/* Functions for event recipeEditFinished in interface Grinder */
void SystemStateMachine::Grinder::raiseRecipeEditFinished()
{
    parent->inEventQueue.push_back( new SctEvent_Grinder_recipeEditFinished( Grinder_recipeEditFinished ) );
    parent->runCycle();
}

void SystemStateMachine::Grinder::internal_raiseRecipeEditFinished()
{
    recipeEditFinished_raised = true;
}

void SystemStateMachine::Grinder::setOperationCallback( OperationCallback * operationCallback )
{
    ifaceGrinderOperationCallback = operationCallback;
}

/* Functions for event startButtonShortPress in interface Internal */
void SystemStateMachine::raiseStartButtonShortPress()
{
    internalEventQueue.push_back( new SctEvent_Internal_startButtonShortPress( Internal_startButtonShortPress ) );
    runCycle();
}

void SystemStateMachine::internal_raiseStartButtonShortPress()
{
    startButtonShortPress_raised = true;
}

sc_boolean SystemStateMachine::isRaisedStartButtonShortPress() const
{
    return startButtonShortPress_raised;
}

/* Functions for event startButtonLongPress in interface Internal */
void SystemStateMachine::raiseStartButtonLongPress()
{
    internalEventQueue.push_back( new SctEvent_Internal_startButtonLongPress( Internal_startButtonLongPress ) );
    runCycle();
}

void SystemStateMachine::internal_raiseStartButtonLongPress()
{
    startButtonLongPress_raised = true;
}

sc_boolean SystemStateMachine::isRaisedStartButtonLongPress() const
{
    return startButtonLongPress_raised;
}

/* Functions for event portaFilterSaveInserted in interface Internal */
void SystemStateMachine::raisePortaFilterSaveInserted()
{
    internalEventQueue.push_back( new SctEvent_Internal_portaFilterSaveInserted( Internal_portaFilterSaveInserted ) );
    runCycle();
}

void SystemStateMachine::internal_raisePortaFilterSaveInserted()
{
    portaFilterSaveInserted_raised = true;
}

sc_boolean SystemStateMachine::isRaisedPortaFilterSaveInserted() const
{
    return portaFilterSaveInserted_raised;
}

/* Functions for event jogDialVeryLongPress in interface Internal */
void SystemStateMachine::raiseJogDialVeryLongPress()
{
    internalEventQueue.push_back( new SctEvent_Internal_jogDialVeryLongPress( Internal_jogDialVeryLongPress ) );
    runCycle();
}

void SystemStateMachine::internal_raiseJogDialVeryLongPress()
{
    jogDialVeryLongPress_raised = true;
}

sc_boolean SystemStateMachine::isRaisedJogDialVeryLongPress() const
{
    return jogDialVeryLongPress_raised;
}

/* Functions for event jogDialLongPress in interface Internal */
void SystemStateMachine::raiseJogDialLongPress()
{
    internalEventQueue.push_back( new SctEvent_Internal_jogDialLongPress( Internal_jogDialLongPress ) );
    runCycle();
}

void SystemStateMachine::internal_raiseJogDialLongPress()
{
    jogDialLongPress_raised = true;
}

sc_boolean SystemStateMachine::isRaisedJogDialLongPress() const
{
    return jogDialLongPress_raised;
}

/* Functions for event jogDialShortPress in interface Internal */
void SystemStateMachine::raiseJogDialShortPress()
{
    internalEventQueue.push_back( new SctEvent_Internal_jogDialShortPress( Internal_jogDialShortPress ) );
    runCycle();
}

void SystemStateMachine::internal_raiseJogDialShortPress()
{
    jogDialShortPress_raised = true;
}

sc_boolean SystemStateMachine::isRaisedJogDialShortPress() const
{
    return jogDialShortPress_raised;
}

/* Functions for event bothButtonsPressed in interface Internal */
void SystemStateMachine::raiseBothButtonsPressed()
{
    internalEventQueue.push_back( new SctEvent_Internal_bothButtonsPressed( Internal_bothButtonsPressed ) );
    runCycle();
}

void SystemStateMachine::internal_raiseBothButtonsPressed()
{
    bothButtonsPressed_raised = true;
}

sc_boolean SystemStateMachine::isRaisedBothButtonsPressed() const
{
    return bothButtonsPressed_raised;
}

/* Functions for event bothButtonsReleased in interface Internal */
void SystemStateMachine::raiseBothButtonsReleased()
{
    internalEventQueue.push_back( new SctEvent_Internal_bothButtonsReleased( Internal_bothButtonsReleased ) );
    runCycle();
}

void SystemStateMachine::internal_raiseBothButtonsReleased()
{
    bothButtonsReleased_raised = true;
}

sc_boolean SystemStateMachine::isRaisedBothButtonsReleased() const
{
    return bothButtonsReleased_raised;
}

/* Functions for event bothButtonsLongPress in interface Internal */
void SystemStateMachine::raiseBothButtonsLongPress()
{
    internalEventQueue.push_back( new SctEvent_Internal_bothButtonsLongPress( Internal_bothButtonsLongPress ) );
    runCycle();
}

void SystemStateMachine::internal_raiseBothButtonsLongPress()
{
    bothButtonsLongPress_raised = true;
}

sc_boolean SystemStateMachine::isRaisedBothButtonsLongPress() const
{
    return bothButtonsLongPress_raised;
}

/* Functions for event bothButtonsLongReleased in interface Internal */
void SystemStateMachine::raiseBothButtonsLongReleased()
{
    internalEventQueue.push_back( new SctEvent_Internal_bothButtonsLongReleased( Internal_bothButtonsLongReleased ) );
    runCycle();
}

void SystemStateMachine::internal_raiseBothButtonsLongReleased()
{
    bothButtonsLongReleased_raised = true;
}

sc_boolean SystemStateMachine::isRaisedBothButtonsLongReleased() const
{
    return bothButtonsLongReleased_raised;
}

/* Functions for event manualForceStandby in interface Internal */
void SystemStateMachine::raiseManualForceStandby()
{
    internalEventQueue.push_back( new SctEvent_Internal_manualForceStandby( Internal_manualForceStandby ) );
    runCycle();
}

void SystemStateMachine::internal_raiseManualForceStandby()
{
    manualForceStandby_raised = true;
}

sc_boolean SystemStateMachine::isRaisedManualForceStandby() const
{
    return manualForceStandby_raised;
}

/* Functions for event finishGrinding in interface Internal */
void SystemStateMachine::raiseFinishGrinding()
{
    internalEventQueue.push_back( new SctEvent_Internal_finishGrinding( Internal_finishGrinding ) );
    runCycle();
}

void SystemStateMachine::internal_raiseFinishGrinding()
{
    finishGrinding_raised = true;
}

sc_boolean SystemStateMachine::isRaisedFinishGrinding() const
{
    return finishGrinding_raised;
}

/* Functions for event standbyStarted in interface Internal */
void SystemStateMachine::raiseStandbyStarted()
{
    internalEventQueue.push_back( new SctEvent_Internal_standbyStarted( Internal_standbyStarted ) );
    runCycle();
}

void SystemStateMachine::internal_raiseStandbyStarted()
{
    standbyStarted_raised = true;
}

sc_boolean SystemStateMachine::isRaisedStandbyStarted() const
{
    return standbyStarted_raised;
}

/* Functions for event standbyTerminated in interface Internal */
void SystemStateMachine::raiseStandbyTerminated()
{
    internalEventQueue.push_back( new SctEvent_Internal_standbyTerminated( Internal_standbyTerminated ) );
    runCycle();
}

void SystemStateMachine::internal_raiseStandbyTerminated()
{
    standbyTerminated_raised = true;
}

sc_boolean SystemStateMachine::isRaisedStandbyTerminated() const
{
    return standbyTerminated_raised;
}

/* Functions for event timeoutEditMode in interface Internal */
void SystemStateMachine::raiseTimeoutEditMode()
{
    internalEventQueue.push_back( new SctEvent_Internal_timeoutEditMode( Internal_timeoutEditMode ) );
    runCycle();
}

void SystemStateMachine::internal_raiseTimeoutEditMode()
{
    timeoutEditMode_raised = true;
}

sc_boolean SystemStateMachine::isRaisedTimeoutEditMode() const
{
    return timeoutEditMode_raised;
}

sc_integer SystemStateMachine::getTempDurationCounter() const
{
    return tempDurationCounter;
}

void SystemStateMachine::setTempDurationCounter( sc_integer value )
{
    this->tempDurationCounter = value;
}

void SystemStateMachine::setTraceObserver( sc::trace::TraceObserver<SystemStateMachineStates> * tracingcallback )
{
    ifaceTraceObserver = tracingcallback;
}

sc::trace::TraceObserver<SystemStateMachine::SystemStateMachineStates> * SystemStateMachine::getTraceObserver()
{
    return ifaceTraceObserver;
}

// implementations of all internal functions

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_0_tr1_tr1()
{
    return ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->errorsPresent() ) == ( true );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_1_tr0_tr0()
{
    return ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->errorsPresent() ) == ( true );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_2_tr0_tr0()
{
    return ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isFatalErrorActive() ) == ( true );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr1_tr1()
{
    return ( ifaceConfig.ifaceConfigOperationCallback->sleepTimeS() ) == ( 300 );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr2_tr2()
{
    return ( ifaceConfig.ifaceConfigOperationCallback->sleepTimeS() ) == ( 600 );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr3_tr3()
{
    return ( ifaceConfig.ifaceConfigOperationCallback->sleepTimeS() ) == ( 1200 );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr4_tr4()
{
    return ( ifaceConfig.ifaceConfigOperationCallback->sleepTimeS() ) == ( 1800 );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine_WlanSettings_r1__choice_0_tr1_tr1()
{
    return ( ifaceConfig.ifaceConfigOperationCallback->isWifiOn() ) == ( false );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_3_tr0_tr0()
{
    return ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isFatalErrorActive() ) == ( true );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_4_tr1_tr1()
{
    return ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isFatalErrorActive() ) == ( true );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_5_tr0_tr0()
{
    return ( ( ifaceConfig.ifaceConfigOperationCallback->confirmedMainState() ) == ( SystemStateMachine::Application::mainStateRecipe2 ) )
           && ( !ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isDegradedModeActive() );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_5_tr2_tr2()
{
    return ( ( ifaceConfig.ifaceConfigOperationCallback->confirmedMainState() ) == ( SystemStateMachine::Application::mainStateRecipe1 ) )
           && ( !ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isDegradedModeActive() );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_5_tr3_tr3()
{
    return ( ( ifaceConfig.ifaceConfigOperationCallback->confirmedMainState() ) == ( SystemStateMachine::Application::mainStateRecipe3 ) )
           && ( !ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isDegradedModeActive() );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_5_tr4_tr4()
{
    return ( ( ifaceConfig.ifaceConfigOperationCallback->confirmedMainState() ) == ( SystemStateMachine::Application::mainStateRecipe4 ) )
           && ( !ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isDegradedModeActive() );
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_6_tr1_tr1()
{
    return ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isDegradedModeActive();
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_7_tr1_tr1()
{
    return ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isDegradedModeActive();
}

sc_boolean SystemStateMachine::check_HemroE54SystemStateMachine__choice_8_tr1_tr1()
{
    return ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isDegradedModeActive();
}

sc_boolean SystemStateMachine::check_Grinding__choice_0_tr0_tr0()
{
    return ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isFatalErrorActive();
}

sc_boolean SystemStateMachine::check_Grinding__choice_0_tr2_tr2()
{
    return ( ( ifaceGrinder.ifaceGrinderOperationCallback->isNotInGrindMode() ) == ( true ) )
           || ( ( ifaceGrinder.ifaceGrinderOperationCallback->isGrindStartable() ) == ( false ) );
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_AutoSleepEdit_tr0()
{
    exseq_HemroE54SystemStateMachine_AutoSleepEdit();
    enseq_HemroE54SystemStateMachine_ManualMode_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_WlanSettings_tr0()
{
    exseq_HemroE54SystemStateMachine_WlanSettings();
    react_HemroE54SystemStateMachine__choice_2();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_DiscLifeTime_tr0()
{
    exseq_HemroE54SystemStateMachine_DiscLifeTime();
    react_HemroE54SystemStateMachine__choice_2();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_tr0()
{
    exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro();
    enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel_default();
    HemroE54SystemStateMachine_DiscLifeTime_react( 0 );
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_tr1()
{
    exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro();
    react_HemroE54SystemStateMachine_DiscLifeTime_r1__exit_Default();
}

void SystemStateMachine::effect_RecipeEdit_OrthogonalRecipeEdit_tr0()
{
    exseq_RecipeEdit_OrthogonalRecipeEdit();
    enseq_RecipeEdit_Idle_default();
    react( 0 );
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_0_tr1()
{
    enseq_HemroE54SystemStateMachine_Errors_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_0_tr0()
{
    enseq_HemroE54SystemStateMachine_ManualMode_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_1_tr0()
{
    enseq_HemroE54SystemStateMachine_Errors_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_1_tr1()
{
    enseq_HemroE54SystemStateMachine_WiFi_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_2_tr0()
{
    enseq_HemroE54SystemStateMachine_Errors_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_2_tr1()
{
    react_HemroE54SystemStateMachine__choice_5();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr1()
{
    enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr2()
{
    enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr3()
{
    enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr4()
{
    enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr0()
{
    enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_WlanSettings_r1__choice_0_tr1()
{
    enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine_WlanSettings_r1__choice_0_tr0()
{
    enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_3_tr0()
{
    enseq_HemroE54SystemStateMachine_Errors_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_3_tr1()
{
    enseq_HemroE54SystemStateMachine_WiFi_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_4_tr1()
{
    enseq_HemroE54SystemStateMachine_Errors_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_4_tr0()
{
    enseq_HemroE54SystemStateMachine_ManualMode_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_5_tr0()
{
    enseq_HemroE54SystemStateMachine_Recipe2_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_5_tr2()
{
    enseq_HemroE54SystemStateMachine_Recipe1_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_5_tr3()
{
    enseq_HemroE54SystemStateMachine_Recipe3_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_5_tr4()
{
    enseq_HemroE54SystemStateMachine_Recipe4_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_5_tr1()
{
    enseq_HemroE54SystemStateMachine_ManualMode_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_6_tr1()
{
    enseq_HemroE54SystemStateMachine_ManualMode_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_6_tr0()
{
    enseq_HemroE54SystemStateMachine_Recipe1_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_7_tr1()
{
    enseq_HemroE54SystemStateMachine_ManualMode_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_7_tr0()
{
    react_HemroE54SystemStateMachine__choice_1();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_8_tr1()
{
    enseq_HemroE54SystemStateMachine_ManualMode_default();
}

void SystemStateMachine::effect_HemroE54SystemStateMachine__choice_8_tr0()
{
    enseq_HemroE54SystemStateMachine_AutoSleepEdit_default();
}

void SystemStateMachine::effect_Grinding__choice_0_tr0()
{
    enseq_Grinding_GrindingError_default();
}

void SystemStateMachine::effect_Grinding__choice_0_tr2()
{
    enseq_Grinding_Idle_default();
}

void SystemStateMachine::effect_Grinding__choice_0_tr1()
{
    ifaceGrinder.ifaceGrinderOperationCallback->startGrind();
    enseq_Grinding_Grinding_default();
}

/* Entry action for state 'Init'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_Init()
{
    /* Entry action for state 'Init'. */
    ifaceApplication.ifaceApplicationOperationCallback->setMainState( SystemStateMachine::Application::mainStateInit );
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
}

/* Entry action for state 'ManualMode'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_ManualMode()
{
    /* Entry action for state 'ManualMode'. */
    ifaceApplication.ifaceApplicationOperationCallback->setMainState( SystemStateMachine::Application::mainStateManual );
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
    ifaceDisplay.ifaceDisplayOperationCallback->sendBlock( (sc_string) "", (sc_string) "", (sc_string) "FFFF" );
}

/* Entry action for state 'Recipe4'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_Recipe4()
{
    /* Entry action for state 'Recipe4'. */
    ifaceApplication.ifaceApplicationOperationCallback->setMainState( SystemStateMachine::Application::mainStateRecipe4 );
    ifaceApplication.ifaceApplicationOperationCallback->activateRecipe( 3 );
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
    ifaceGrinder.ifaceGrinderOperationCallback->updateDisplay();
}

/* Entry action for state 'Recipe3'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_Recipe3()
{
    /* Entry action for state 'Recipe3'. */
    ifaceApplication.ifaceApplicationOperationCallback->setMainState( SystemStateMachine::Application::mainStateRecipe3 );
    ifaceApplication.ifaceApplicationOperationCallback->activateRecipe( 2 );
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
    ifaceGrinder.ifaceGrinderOperationCallback->updateDisplay();
}

/* Entry action for state 'Recipe2'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_Recipe2()
{
    /* Entry action for state 'Recipe2'. */
    ifaceApplication.ifaceApplicationOperationCallback->setMainState( SystemStateMachine::Application::mainStateRecipe2 );
    ifaceApplication.ifaceApplicationOperationCallback->activateRecipe( 1 );
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
    ifaceGrinder.ifaceGrinderOperationCallback->updateDisplay();
}

/* Entry action for state 'Recipe1'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_Recipe1()
{
    /* Entry action for state 'Recipe1'. */
    ifaceApplication.ifaceApplicationOperationCallback->setMainState( SystemStateMachine::Application::mainStateRecipe1 );
    ifaceApplication.ifaceApplicationOperationCallback->activateRecipe( 0 );
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
    ifaceGrinder.ifaceGrinderOperationCallback->updateDisplay();
}

/* Entry action for state 'DisplayTest'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_DisplayTest()
{
    /* Entry action for state 'DisplayTest'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[0] ), ( 2 * 1000 ), false );
    ifaceApplication.ifaceApplicationOperationCallback->setMainState( SystemStateMachine::Application::mainStateDisplayTest );
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
    ifaceDisplay.ifaceDisplayOperationCallback->sendBlock( (sc_string) "8888", (sc_string) "....", (sc_string) "FFFF" );
}

/* Entry action for state 'WiFi'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_WiFi()
{
    /* Entry action for state 'WiFi'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[1] ), ( 3 * 1000 ), false );
    ifaceApplication.ifaceApplicationOperationCallback->setMainState( SystemStateMachine::Application::mainStateWifi );
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
    ifaceDisplay.ifaceDisplayOperationCallback->sendBlock( (sc_string) "", (sc_string) "", (sc_string) "FFFF" );
}

/* Entry action for state 'Errors'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_Errors()
{
    /* Entry action for state 'Errors'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[2] ), ( 2 * 1000 ), true );
    ifaceApplication.ifaceApplicationOperationCallback->setMainState( SystemStateMachine::Application::mainStateErrors );
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
    ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->toggleErrorDisplay();
}

/* Entry action for state 'ShowBanner1'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1()
{
    /* Entry action for state 'ShowBanner1'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[3] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "Auto" );
    ifaceApplication.ifaceApplicationOperationCallback->startAutoSleepEdit();
}

/* Entry action for state 'ShowBanner2'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2()
{
    /* Entry action for state 'ShowBanner2'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[4] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "SLEE" );
}

/* Entry action for state 'ShowBanner3'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3()
{
    /* Entry action for state 'ShowBanner3'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[5] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "P in" );
}

/* Entry action for state 'Show5Min'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min()
{
    /* Entry action for state 'Show5Min'. */
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "5" );
}

/* Entry action for state 'Show3Min'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min()
{
    /* Entry action for state 'Show3Min'. */
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "3" );
}

/* Entry action for state 'ShowIntro1'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1()
{
    /* Entry action for state 'ShowIntro1'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[6] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendBlock( (sc_string) "_   ", (sc_string) "", (sc_string) "FFFF" );
}

/* Entry action for state 'ShowIntro2'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2()
{
    /* Entry action for state 'ShowIntro2'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[7] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "__  " );
}

/* Entry action for state 'ShowIntro3'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3()
{
    /* Entry action for state 'ShowIntro3'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[8] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "___ " );
}

/* Entry action for state 'ShowIntro4'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4()
{
    /* Entry action for state 'ShowIntro4'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[9] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "____" );
}

/* Entry action for state 'Show10Min'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min()
{
    /* Entry action for state 'Show10Min'. */
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "10" );
}

/* Entry action for state 'Show20Min'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min()
{
    /* Entry action for state 'Show20Min'. */
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "20" );
}

/* Entry action for state 'Show30Min'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min()
{
    /* Entry action for state 'Show30Min'. */
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "30" );
}

/* Entry action for state 'WlanOn'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn()
{
    /* Entry action for state 'WlanOn'. */
    ifaceDisplay.ifaceDisplayOperationCallback->sendBlock( (sc_string) "On  ", (sc_string) "", (sc_string) "FFFF" );
}

/* Entry action for state 'WlanOff'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff()
{
    /* Entry action for state 'WlanOff'. */
    ifaceDisplay.ifaceDisplayOperationCallback->sendBlock( (sc_string) "OFF ", (sc_string) "", (sc_string) "FFFF" );
}

/* Entry action for state 'WlanReset'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset()
{
    /* Entry action for state 'WlanReset'. */
    ifaceDisplay.ifaceDisplayOperationCallback->sendBlock( (sc_string) "rSEt", (sc_string) "", (sc_string) "FFFF" );
}

/* Entry action for state 'showDiscLabel'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel()
{
    /* Entry action for state 'showDiscLabel'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[10] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendBlock( (sc_string) "diSC", (sc_string) "", (sc_string) "FFFF" );
    tempDurationCounter++;
}

/* Entry action for state 'showDiscLifeTime'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime()
{
    /* Entry action for state 'showDiscLifeTime'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[11] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( ifaceStatistic.ifaceStatisticOperationCallback->discLifeStr() );
    tempDurationCounter += 1;
}

/* Entry action for state 'showResetOn'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn()
{
    /* Entry action for state 'showResetOn'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[12] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "rSEt" );
    tempDurationCounter++;
}

/* Entry action for state 'showResetOff'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff()
{
    /* Entry action for state 'showResetOff'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[13] ), ( 1 * 1000 ), false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "to 0" );
    tempDurationCounter++;
}

/* Entry action for state 'showDash1'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1()
{
    /* Entry action for state 'showDash1'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[14] ), 250, false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendBlock( (sc_string) "   _", (sc_string) "", (sc_string) "FFFF" );
    tempDurationCounter++;
}

/* Entry action for state 'showDash2'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2()
{
    /* Entry action for state 'showDash2'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[15] ), 250, false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "  _ " );
    tempDurationCounter++;
}

/* Entry action for state 'showDash3'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3()
{
    /* Entry action for state 'showDash3'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[16] ), 250, false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) " _  " );
    tempDurationCounter++;
}

/* Entry action for state 'showDash4'. */
void SystemStateMachine::enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4()
{
    /* Entry action for state 'showDash4'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[17] ), 250, false );
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "_   " );
    tempDurationCounter++;
}

/* Entry action for state 'NormalOperation'. */
void SystemStateMachine::enact_SleepMode_NormalOperation()
{
    /* Entry action for state 'NormalOperation'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[18] ), ( ifaceConfig.ifaceConfigOperationCallback->sleepTimeS() * 1000 ), false );
    timerService->setTimer( this, (sc_eventid)( &timeEvents[19] ), ( 5 * 1000 ), false );
}

/* Entry action for state 'Standby'. */
void SystemStateMachine::enact_SleepMode_Standby()
{
    /* Entry action for state 'Standby'. */
    ifaceWifi.ifaceWifiOperationCallback->sendSleepOn();
    ifaceApplication.ifaceApplicationOperationCallback->pushMainState( SystemStateMachine::Application::mainStateStandby );
    internalEventQueue.push_back( new SctEvent_Internal_standbyStarted( Internal_standbyStarted ) );
    ifaceDisplay.ifaceDisplayOperationCallback->sendBlock( (sc_string) "", (sc_string) "", (sc_string) "OOOO" );
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
}

/* Entry action for state 'BothButtonsPressed'. */
void SystemStateMachine::enact_KeyPressEvaluation_BothButtonsPressed()
{
    /* Entry action for state 'BothButtonsPressed'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[20] ), ( 3 * 1000 ), false );
    internalEventQueue.push_back( new SctEvent_Internal_bothButtonsPressed( Internal_bothButtonsPressed ) );
}

/* Entry action for state 'LongPressBothButtons'. */
void SystemStateMachine::enact_KeyPressEvaluation_LongPressBothButtons()
{
    /* Entry action for state 'LongPressBothButtons'. */
    internalEventQueue.push_back( new SctEvent_Internal_bothButtonsLongPress( Internal_bothButtonsLongPress ) );
}

/* Entry action for state 'LongPressStartButton'. */
void SystemStateMachine::enact_KeyPressEvaluation_LongPress_r2_LongPressStartButton()
{
    /* Entry action for state 'LongPressStartButton'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[21] ), ( 7 * 1000 ), false );
    internalEventQueue.push_back( new SctEvent_Internal_startButtonLongPress( Internal_startButtonLongPress ) );
}

/* Entry action for state 'StartButtonPressed'. */
void SystemStateMachine::enact_KeyPressEvaluation_LongPress_r2_StartButtonPressed()
{
    /* Entry action for state 'StartButtonPressed'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[22] ), ( 1 * 1000 ), false );
}

/* Entry action for state 'StartButtonPressedFromBoth'. */
void SystemStateMachine::enact_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth()
{
    /* Entry action for state 'StartButtonPressedFromBoth'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[23] ), ( 7 * 1000 ), false );
}

/* Entry action for state 'StartButtonLongPressedFromBoth'. */
void SystemStateMachine::enact_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth()
{
    /* Entry action for state 'StartButtonLongPressedFromBoth'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[24] ), ( 7 * 1000 ), false );
    internalEventQueue.push_back( new SctEvent_Internal_bothButtonsLongReleased( Internal_bothButtonsLongReleased ) );
}

/* Entry action for state 'LongPressJogDial'. */
void SystemStateMachine::enact_KeyPressEvaluation_LongPress_r1_LongPressJogDial()
{
    /* Entry action for state 'LongPressJogDial'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[25] ), ( 9 * 1000 ), false );
    internalEventQueue.push_back( new SctEvent_Internal_jogDialLongPress( Internal_jogDialLongPress ) );
}

/* Entry action for state 'JogDialPressed'. */
void SystemStateMachine::enact_KeyPressEvaluation_LongPress_r1_JogDialPressed()
{
    /* Entry action for state 'JogDialPressed'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[26] ), ( 1 * 1000 ), false );
}

/* Entry action for state 'JogDialPressedFromBoth'. */
void SystemStateMachine::enact_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth()
{
    /* Entry action for state 'JogDialPressedFromBoth'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[27] ), ( 7 * 1000 ), false );
}

/* Entry action for state 'JogDialLongPressedFromBoth'. */
void SystemStateMachine::enact_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth()
{
    /* Entry action for state 'JogDialLongPressedFromBoth'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[28] ), ( 7 * 1000 ), false );
    internalEventQueue.push_back( new SctEvent_Internal_bothButtonsLongReleased( Internal_bothButtonsLongReleased ) );
}

/* Entry action for state 'VeryLongPressJogDial'. */
void SystemStateMachine::enact_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial()
{
    /* Entry action for state 'VeryLongPressJogDial'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[29] ), ( 7 * 1000 ), false );
    internalEventQueue.push_back( new SctEvent_Internal_jogDialVeryLongPress( Internal_jogDialVeryLongPress ) );
}

/* Entry action for state 'Grinding'. */
void SystemStateMachine::enact_Grinding_Grinding()
{
    /* Entry action for state 'Grinding'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[30] ), 100, true );
    ifaceGrinder.ifaceGrinderOperationCallback->updateDisplay();
}

/* Entry action for state 'GrindingError'. */
void SystemStateMachine::enact_Grinding_GrindingError()
{
    /* Entry action for state 'GrindingError'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[31] ), ( 3 * 1000 ), false );
    ifaceGrinder.ifaceGrinderOperationCallback->stopGrind();
    ifaceDisplay.ifaceDisplayOperationCallback->sendTextStr( (sc_string) "Err" );
    ifaceDisplay.ifaceDisplayOperationCallback->sendDots( (sc_string) "" );
}

/* Entry action for state 'Idle'. */
void SystemStateMachine::enact_Grinding_Idle()
{
    /* Entry action for state 'Idle'. */
    internalEventQueue.push_back( new SctEvent_Internal_finishGrinding( Internal_finishGrinding ) );
    ifaceGrinder.ifaceGrinderOperationCallback->grindingFinished();
}

/* Entry action for state 'SaveGrindingResults'. */
void SystemStateMachine::enact_Grinding_SaveGrindingResults()
{
    /* Entry action for state 'SaveGrindingResults'. */
    timerService->setTimer( this, (sc_eventid)( &timeEvents[32] ), ( 5 * 1000 ), false );
    ifaceGrinder.ifaceGrinderOperationCallback->stopGrind();
}

/* Entry action for state 'EditDigit1'. */
void SystemStateMachine::enact_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1()
{
    /* Entry action for state 'EditDigit1'. */
    ifaceGrinder.ifaceGrinderOperationCallback->editDigit( 0 );
}

/* Entry action for state 'EditDigit2'. */
void SystemStateMachine::enact_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2()
{
    /* Entry action for state 'EditDigit2'. */
    ifaceGrinder.ifaceGrinderOperationCallback->editDigit( 1 );
}

/* Entry action for state 'EditDigit3'. */
void SystemStateMachine::enact_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3()
{
    /* Entry action for state 'EditDigit3'. */
    ifaceGrinder.ifaceGrinderOperationCallback->editDigit( 2 );
}

/* Entry action for state 'EditRecipe'. */
void SystemStateMachine::enact_RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe()
{
    /* Entry action for state 'EditRecipe'. */
    ifaceGrinder.ifaceGrinderOperationCallback->editRecipe();
}

/* Exit action for state 'DisplayTest'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_DisplayTest()
{
    /* Exit action for state 'DisplayTest'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[0] ) );
}

/* Exit action for state 'WiFi'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_WiFi()
{
    /* Exit action for state 'WiFi'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[1] ) );
}

/* Exit action for state 'Errors'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_Errors()
{
    /* Exit action for state 'Errors'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[2] ) );
}

/* Exit action for state 'AutoSleepEdit'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_AutoSleepEdit()
{
    /* Exit action for state 'AutoSleepEdit'. */
    ifaceApplication.ifaceApplicationOperationCallback->stopAutoSleepEdit();
}

/* Exit action for state 'ShowBanner1'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1()
{
    /* Exit action for state 'ShowBanner1'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[3] ) );
}

/* Exit action for state 'ShowBanner2'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2()
{
    /* Exit action for state 'ShowBanner2'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[4] ) );
}

/* Exit action for state 'ShowBanner3'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3()
{
    /* Exit action for state 'ShowBanner3'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[5] ) );
}

/* Exit action for state 'ShowIntro1'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1()
{
    /* Exit action for state 'ShowIntro1'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[6] ) );
}

/* Exit action for state 'ShowIntro2'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2()
{
    /* Exit action for state 'ShowIntro2'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[7] ) );
}

/* Exit action for state 'ShowIntro3'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3()
{
    /* Exit action for state 'ShowIntro3'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[8] ) );
}

/* Exit action for state 'ShowIntro4'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4()
{
    /* Exit action for state 'ShowIntro4'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[9] ) );
}

/* Exit action for state 'showDiscLabel'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel()
{
    /* Exit action for state 'showDiscLabel'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[10] ) );
}

/* Exit action for state 'showDiscLifeTime'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime()
{
    /* Exit action for state 'showDiscLifeTime'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[11] ) );
}

/* Exit action for state 'showResetOn'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn()
{
    /* Exit action for state 'showResetOn'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[12] ) );
}

/* Exit action for state 'showResetOff'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff()
{
    /* Exit action for state 'showResetOff'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[13] ) );
}

/* Exit action for state 'showDash1'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1()
{
    /* Exit action for state 'showDash1'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[14] ) );
}

/* Exit action for state 'showDash2'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2()
{
    /* Exit action for state 'showDash2'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[15] ) );
}

/* Exit action for state 'showDash3'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3()
{
    /* Exit action for state 'showDash3'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[16] ) );
}

/* Exit action for state 'showDash4'. */
void SystemStateMachine::exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4()
{
    /* Exit action for state 'showDash4'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[17] ) );
}

/* Exit action for state 'NormalOperation'. */
void SystemStateMachine::exact_SleepMode_NormalOperation()
{
    /* Exit action for state 'NormalOperation'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[18] ) );
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[19] ) );
}

/* Exit action for state 'Standby'. */
void SystemStateMachine::exact_SleepMode_Standby()
{
    /* Exit action for state 'Standby'. */
    internalEventQueue.push_back( new SctEvent_Internal_standbyTerminated( Internal_standbyTerminated ) );
    ifaceWifi.ifaceWifiOperationCallback->sendSleepOff();
    ifaceApplication.ifaceApplicationOperationCallback->popMainState();
    ifaceDisplay.ifaceDisplayOperationCallback->updateAllStatusLed();
}

/* Exit action for state 'BothButtonsPressed'. */
void SystemStateMachine::exact_KeyPressEvaluation_BothButtonsPressed()
{
    /* Exit action for state 'BothButtonsPressed'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[20] ) );
}

/* Exit action for state 'LongPressStartButton'. */
void SystemStateMachine::exact_KeyPressEvaluation_LongPress_r2_LongPressStartButton()
{
    /* Exit action for state 'LongPressStartButton'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[21] ) );
}

/* Exit action for state 'StartButtonPressed'. */
void SystemStateMachine::exact_KeyPressEvaluation_LongPress_r2_StartButtonPressed()
{
    /* Exit action for state 'StartButtonPressed'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[22] ) );
}

/* Exit action for state 'StartButtonPressedFromBoth'. */
void SystemStateMachine::exact_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth()
{
    /* Exit action for state 'StartButtonPressedFromBoth'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[23] ) );
}

/* Exit action for state 'StartButtonLongPressedFromBoth'. */
void SystemStateMachine::exact_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth()
{
    /* Exit action for state 'StartButtonLongPressedFromBoth'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[24] ) );
}

/* Exit action for state 'LongPressJogDial'. */
void SystemStateMachine::exact_KeyPressEvaluation_LongPress_r1_LongPressJogDial()
{
    /* Exit action for state 'LongPressJogDial'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[25] ) );
}

/* Exit action for state 'JogDialPressed'. */
void SystemStateMachine::exact_KeyPressEvaluation_LongPress_r1_JogDialPressed()
{
    /* Exit action for state 'JogDialPressed'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[26] ) );
}

/* Exit action for state 'JogDialPressedFromBoth'. */
void SystemStateMachine::exact_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth()
{
    /* Exit action for state 'JogDialPressedFromBoth'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[27] ) );
}

/* Exit action for state 'JogDialLongPressedFromBoth'. */
void SystemStateMachine::exact_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth()
{
    /* Exit action for state 'JogDialLongPressedFromBoth'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[28] ) );
}

/* Exit action for state 'VeryLongPressJogDial'. */
void SystemStateMachine::exact_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial()
{
    /* Exit action for state 'VeryLongPressJogDial'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[29] ) );
}

/* Exit action for state 'Grinding'. */
void SystemStateMachine::exact_Grinding_Grinding()
{
    /* Exit action for state 'Grinding'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[30] ) );
}

/* Exit action for state 'GrindingError'. */
void SystemStateMachine::exact_Grinding_GrindingError()
{
    /* Exit action for state 'GrindingError'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[31] ) );
    ifaceGrinder.ifaceGrinderOperationCallback->updateDisplay();
}

/* Exit action for state 'SaveGrindingResults'. */
void SystemStateMachine::exact_Grinding_SaveGrindingResults()
{
    /* Exit action for state 'SaveGrindingResults'. */
    timerService->unsetTimer( this, (sc_eventid)( &timeEvents[32] ) );
}

/* 'default' enter sequence for state Init */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_Init_default()
{
    /* 'default' enter sequence for state Init */
    enact_HemroE54SystemStateMachine_Init();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_Init );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_Init;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state ManualMode */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_ManualMode_default()
{
    /* 'default' enter sequence for state ManualMode */
    enact_HemroE54SystemStateMachine_ManualMode();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_ManualMode );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_ManualMode;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Recipe4 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_Recipe4_default()
{
    /* 'default' enter sequence for state Recipe4 */
    enact_HemroE54SystemStateMachine_Recipe4();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_Recipe4 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_Recipe4;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Recipe3 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_Recipe3_default()
{
    /* 'default' enter sequence for state Recipe3 */
    enact_HemroE54SystemStateMachine_Recipe3();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_Recipe3 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_Recipe3;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Recipe2 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_Recipe2_default()
{
    /* 'default' enter sequence for state Recipe2 */
    enact_HemroE54SystemStateMachine_Recipe2();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_Recipe2 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_Recipe2;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Recipe1 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_Recipe1_default()
{
    /* 'default' enter sequence for state Recipe1 */
    enact_HemroE54SystemStateMachine_Recipe1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_Recipe1 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_Recipe1;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state DisplayTest */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DisplayTest_default()
{
    /* 'default' enter sequence for state DisplayTest */
    enact_HemroE54SystemStateMachine_DisplayTest();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DisplayTest );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_DisplayTest;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state WiFi */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_WiFi_default()
{
    /* 'default' enter sequence for state WiFi */
    enact_HemroE54SystemStateMachine_WiFi();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_WiFi );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_WiFi;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Errors */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_Errors_default()
{
    /* 'default' enter sequence for state Errors */
    enact_HemroE54SystemStateMachine_Errors();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_Errors );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_Errors;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state AutoSleepEdit */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_default()
{
    /* 'default' enter sequence for state AutoSleepEdit */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
    }
    enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_default();
}

/* 'default' enter sequence for state ShowBanner1 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1_default()
{
    /* 'default' enter sequence for state ShowBanner1 */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state ShowBanner2 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2_default()
{
    /* 'default' enter sequence for state ShowBanner2 */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state ShowBanner3 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3_default()
{
    /* 'default' enter sequence for state ShowBanner3 */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Show5Min */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min_default()
{
    /* 'default' enter sequence for state Show5Min */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Show3Min */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min_default()
{
    /* 'default' enter sequence for state Show3Min */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state ShowIntro1 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1_default()
{
    /* 'default' enter sequence for state ShowIntro1 */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state ShowIntro2 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2_default()
{
    /* 'default' enter sequence for state ShowIntro2 */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state ShowIntro3 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3_default()
{
    /* 'default' enter sequence for state ShowIntro3 */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state ShowIntro4 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4_default()
{
    /* 'default' enter sequence for state ShowIntro4 */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Show10Min */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min_default()
{
    /* 'default' enter sequence for state Show10Min */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Show20Min */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min_default()
{
    /* 'default' enter sequence for state Show20Min */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Show30Min */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min_default()
{
    /* 'default' enter sequence for state Show30Min */
    enact_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state WlanSettings */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_WlanSettings_default()
{
    /* 'default' enter sequence for state WlanSettings */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings );
    }
    enseq_HemroE54SystemStateMachine_WlanSettings_r1_default();
}

/* 'default' enter sequence for state WlanOn */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn_default()
{
    /* 'default' enter sequence for state WlanOn */
    enact_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_WlanOn );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_WlanSettings_r1_WlanOn;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state WlanOff */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff_default()
{
    /* 'default' enter sequence for state WlanOff */
    enact_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_WlanOff );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_WlanSettings_r1_WlanOff;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state WlanReset */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset_default()
{
    /* 'default' enter sequence for state WlanReset */
    enact_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_WlanReset );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_WlanSettings_r1_WlanReset;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state AnnounceEdit */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit_default()
{
    /* 'default' enter sequence for state AnnounceEdit */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state EditRecipe1 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_EditRecipe1_default()
{
    /* 'default' enter sequence for state EditRecipe1 */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_EditRecipe1 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_EditRecipe1;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state EditRecipe2 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_EditRecipe2_default()
{
    /* 'default' enter sequence for state EditRecipe2 */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_EditRecipe2 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_EditRecipe2;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state EditRecipe3 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_EditRecipe3_default()
{
    /* 'default' enter sequence for state EditRecipe3 */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_EditRecipe3 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_EditRecipe3;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state EditRecipe4 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_EditRecipe4_default()
{
    /* 'default' enter sequence for state EditRecipe4 */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_EditRecipe4 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_EditRecipe4;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state GrindManual */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_GrindManual_default()
{
    /* 'default' enter sequence for state GrindManual */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_GrindManual );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_GrindManual;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state GrindRecipe4 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_GrindRecipe4_default()
{
    /* 'default' enter sequence for state GrindRecipe4 */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe4 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_GrindRecipe4;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state GrindRecipe3 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_GrindRecipe3_default()
{
    /* 'default' enter sequence for state GrindRecipe3 */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe3 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_GrindRecipe3;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state GrindRecipe2 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_GrindRecipe2_default()
{
    /* 'default' enter sequence for state GrindRecipe2 */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe2 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_GrindRecipe2;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state GrindRecipe1 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_GrindRecipe1_default()
{
    /* 'default' enter sequence for state GrindRecipe1 */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe1 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_GrindRecipe1;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state Standby */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_Standby_default()
{
    /* 'default' enter sequence for state Standby */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_Standby );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_Standby;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state DiscLifeTime */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_default()
{
    /* 'default' enter sequence for state DiscLifeTime */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime );
    }
    enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_default();
}

/* 'default' enter sequence for state showDiscLabel */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel_default()
{
    /* 'default' enter sequence for state showDiscLabel */
    enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state showDiscLifeTime */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime_default()
{
    /* 'default' enter sequence for state showDiscLifeTime */
    enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state showResetOn */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn_default()
{
    /* 'default' enter sequence for state showResetOn */
    enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state showResetOff */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff_default()
{
    /* 'default' enter sequence for state showResetOff */
    enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state showIntro */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_default()
{
    /* 'default' enter sequence for state showIntro */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro );
    }
    enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_default();
}

/* 'default' enter sequence for state showDash1 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1_default()
{
    /* 'default' enter sequence for state showDash1 */
    enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state showDash2 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2_default()
{
    /* 'default' enter sequence for state showDash2 */
    enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state showDash3 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3_default()
{
    /* 'default' enter sequence for state showDash3 */
    enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state showDash4 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4_default()
{
    /* 'default' enter sequence for state showDash4 */
    enact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4 );
    }
    stateConfVector[0]      = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4;
    stateConfVectorPosition = 0;
}

/* 'default' enter sequence for state NormalOperation */
void SystemStateMachine::enseq_SleepMode_NormalOperation_default()
{
    /* 'default' enter sequence for state NormalOperation */
    enact_SleepMode_NormalOperation();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::SleepMode_NormalOperation );
    }
    stateConfVector[1]      = SleepMode_NormalOperation;
    stateConfVectorPosition = 1;
}

/* 'default' enter sequence for state Standby */
void SystemStateMachine::enseq_SleepMode_Standby_default()
{
    /* 'default' enter sequence for state Standby */
    enact_SleepMode_Standby();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::SleepMode_Standby );
    }
    stateConfVector[1]      = SleepMode_Standby;
    stateConfVectorPosition = 1;
}

/* 'default' enter sequence for state BothButtonsPressed */
void SystemStateMachine::enseq_KeyPressEvaluation_BothButtonsPressed_default()
{
    /* 'default' enter sequence for state BothButtonsPressed */
    enact_KeyPressEvaluation_BothButtonsPressed();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_BothButtonsPressed );
    }
    stateConfVector[2]      = KeyPressEvaluation_BothButtonsPressed;
    stateConfVectorPosition = 2;
}

/* 'default' enter sequence for state LongPressBothButtons */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPressBothButtons_default()
{
    /* 'default' enter sequence for state LongPressBothButtons */
    enact_KeyPressEvaluation_LongPressBothButtons();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPressBothButtons );
    }
    stateConfVector[2]      = KeyPressEvaluation_LongPressBothButtons;
    stateConfVectorPosition = 2;
}

/* 'default' enter sequence for state LongPress */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_default()
{
    /* 'default' enter sequence for state LongPress */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress );
    }
    enseq_KeyPressEvaluation_LongPress_r2_default();
    enseq_KeyPressEvaluation_LongPress_r1_default();
}

/* 'default' enter sequence for state StartButtonError */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r2_StartButtonError_default()
{
    /* 'default' enter sequence for state StartButtonError */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonError );
    }
    stateConfVector[2]      = KeyPressEvaluation_LongPress_r2_StartButtonError;
    stateConfVectorPosition = 2;
}

/* 'default' enter sequence for state LongPressStartButton */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r2_LongPressStartButton_default()
{
    /* 'default' enter sequence for state LongPressStartButton */
    enact_KeyPressEvaluation_LongPress_r2_LongPressStartButton();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r2_LongPressStartButton );
    }
    stateConfVector[2]      = KeyPressEvaluation_LongPress_r2_LongPressStartButton;
    stateConfVectorPosition = 2;
}

/* 'default' enter sequence for state StartButtonPressed */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r2_StartButtonPressed_default()
{
    /* 'default' enter sequence for state StartButtonPressed */
    enact_KeyPressEvaluation_LongPress_r2_StartButtonPressed();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonPressed );
    }
    stateConfVector[2]      = KeyPressEvaluation_LongPress_r2_StartButtonPressed;
    stateConfVectorPosition = 2;
}

/* 'default' enter sequence for state StartButtonReleased */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased_default()
{
    /* 'default' enter sequence for state StartButtonReleased */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonReleased );
    }
    stateConfVector[2]      = KeyPressEvaluation_LongPress_r2_StartButtonReleased;
    stateConfVectorPosition = 2;
}

/* 'default' enter sequence for state StartButtonPressedFromBoth */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth_default()
{
    /* 'default' enter sequence for state StartButtonPressedFromBoth */
    enact_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth );
    }
    stateConfVector[2]      = KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth;
    stateConfVectorPosition = 2;
}

/* 'default' enter sequence for state StartButtonLongPressedFromBoth */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth_default()
{
    /* 'default' enter sequence for state StartButtonLongPressedFromBoth */
    enact_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth );
    }
    stateConfVector[2]      = KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth;
    stateConfVectorPosition = 2;
}

/* 'default' enter sequence for state JogDialError */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r1_JogDialError_default()
{
    /* 'default' enter sequence for state JogDialError */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialError );
    }
    stateConfVector[3]      = KeyPressEvaluation_LongPress_r1_JogDialError;
    stateConfVectorPosition = 3;
}

/* 'default' enter sequence for state LongPressJogDial */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r1_LongPressJogDial_default()
{
    /* 'default' enter sequence for state LongPressJogDial */
    enact_KeyPressEvaluation_LongPress_r1_LongPressJogDial();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r1_LongPressJogDial );
    }
    stateConfVector[3]      = KeyPressEvaluation_LongPress_r1_LongPressJogDial;
    stateConfVectorPosition = 3;
}

/* 'default' enter sequence for state JogDialPressed */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r1_JogDialPressed_default()
{
    /* 'default' enter sequence for state JogDialPressed */
    enact_KeyPressEvaluation_LongPress_r1_JogDialPressed();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialPressed );
    }
    stateConfVector[3]      = KeyPressEvaluation_LongPress_r1_JogDialPressed;
    stateConfVectorPosition = 3;
}

/* 'default' enter sequence for state JogDialReleased */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r1_JogDialReleased_default()
{
    /* 'default' enter sequence for state JogDialReleased */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialReleased );
    }
    stateConfVector[3]      = KeyPressEvaluation_LongPress_r1_JogDialReleased;
    stateConfVectorPosition = 3;
}

/* 'default' enter sequence for state JogDialPressedFromBoth */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth_default()
{
    /* 'default' enter sequence for state JogDialPressedFromBoth */
    enact_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth );
    }
    stateConfVector[3]      = KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth;
    stateConfVectorPosition = 3;
}

/* 'default' enter sequence for state JogDialLongPressedFromBoth */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth_default()
{
    /* 'default' enter sequence for state JogDialLongPressedFromBoth */
    enact_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth );
    }
    stateConfVector[3]      = KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth;
    stateConfVectorPosition = 3;
}

/* 'default' enter sequence for state VeryLongPressJogDial */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial_default()
{
    /* 'default' enter sequence for state VeryLongPressJogDial */
    enact_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial );
    }
    stateConfVector[3]      = KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial;
    stateConfVectorPosition = 3;
}

/* 'default' enter sequence for state Grinding */
void SystemStateMachine::enseq_Grinding_Grinding_default()
{
    /* 'default' enter sequence for state Grinding */
    enact_Grinding_Grinding();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::Grinding_Grinding );
    }
    stateConfVector[4]      = Grinding_Grinding;
    stateConfVectorPosition = 4;
}

/* 'default' enter sequence for state GrindingError */
void SystemStateMachine::enseq_Grinding_GrindingError_default()
{
    /* 'default' enter sequence for state GrindingError */
    enact_Grinding_GrindingError();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::Grinding_GrindingError );
    }
    stateConfVector[4]      = Grinding_GrindingError;
    stateConfVectorPosition = 4;
}

/* 'default' enter sequence for state Idle */
void SystemStateMachine::enseq_Grinding_Idle_default()
{
    /* 'default' enter sequence for state Idle */
    enact_Grinding_Idle();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::Grinding_Idle );
    }
    stateConfVector[4]      = Grinding_Idle;
    stateConfVectorPosition = 4;
}

/* 'default' enter sequence for state SaveGrindingResults */
void SystemStateMachine::enseq_Grinding_SaveGrindingResults_default()
{
    /* 'default' enter sequence for state SaveGrindingResults */
    enact_Grinding_SaveGrindingResults();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::Grinding_SaveGrindingResults );
    }
    stateConfVector[4]      = Grinding_SaveGrindingResults;
    stateConfVectorPosition = 4;
}

/* 'default' enter sequence for state Idle */
void SystemStateMachine::enseq_PortaFilterInsertion_Idle_default()
{
    /* 'default' enter sequence for state Idle */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::PortaFilterInsertion_Idle );
    }
    stateConfVector[5]      = PortaFilterInsertion_Idle;
    stateConfVectorPosition = 5;
}

/* 'default' enter sequence for state OrthogonalRecipeEdit */
void SystemStateMachine::enseq_RecipeEdit_OrthogonalRecipeEdit_default()
{
    /* 'default' enter sequence for state OrthogonalRecipeEdit */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit );
    }
    enseq_RecipeEdit_OrthogonalRecipeEdit_r1_default();
    enseq_RecipeEdit_OrthogonalRecipeEdit_r2_default();
}

/* 'default' enter sequence for state EditDigit1 */
void SystemStateMachine::enseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1_default()
{
    /* 'default' enter sequence for state EditDigit1 */
    enact_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1 );
    }
    stateConfVector[6]      = RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1;
    stateConfVectorPosition = 6;
}

/* 'default' enter sequence for state EditDigit2 */
void SystemStateMachine::enseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2_default()
{
    /* 'default' enter sequence for state EditDigit2 */
    enact_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2 );
    }
    stateConfVector[6]      = RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2;
    stateConfVectorPosition = 6;
}

/* 'default' enter sequence for state EditDigit3 */
void SystemStateMachine::enseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3_default()
{
    /* 'default' enter sequence for state EditDigit3 */
    enact_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3 );
    }
    stateConfVector[6]      = RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3;
    stateConfVectorPosition = 6;
}

/* 'default' enter sequence for state EditRecipe */
void SystemStateMachine::enseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe_default()
{
    /* 'default' enter sequence for state EditRecipe */
    enact_RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe );
    }
    stateConfVector[6]      = RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe;
    stateConfVectorPosition = 6;
}

/* 'default' enter sequence for state EditRecipe */
void SystemStateMachine::enseq_RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe_default()
{
    /* 'default' enter sequence for state EditRecipe */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe );
    }
    stateConfVector[7]      = RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe;
    stateConfVectorPosition = 7;
}

/* 'default' enter sequence for state Idle */
void SystemStateMachine::enseq_RecipeEdit_Idle_default()
{
    /* 'default' enter sequence for state Idle */
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateEntered( SystemStateMachine::RecipeEdit_Idle );
    }
    stateConfVector[6]      = RecipeEdit_Idle;
    stateConfVectorPosition = 6;
}

/* 'default' enter sequence for region HemroE54SystemStateMachine */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_default()
{
    /* 'default' enter sequence for region HemroE54SystemStateMachine */
    react_HemroE54SystemStateMachine__entry_Default();
}

/* 'default' enter sequence for region r1 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_default()
{
    /* 'default' enter sequence for region r1 */
    react_HemroE54SystemStateMachine_AutoSleepEdit_r1__entry_Default();
}

/* 'default' enter sequence for region r1 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_WlanSettings_r1_default()
{
    /* 'default' enter sequence for region r1 */
    react_HemroE54SystemStateMachine_WlanSettings_r1__entry_Default();
}

/* 'default' enter sequence for region r1 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_default()
{
    /* 'default' enter sequence for region r1 */
    react_HemroE54SystemStateMachine_DiscLifeTime_r1__entry_Default();
}

/* 'default' enter sequence for region r1 */
void SystemStateMachine::enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_default()
{
    /* 'default' enter sequence for region r1 */
    react_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1__entry_Default();
}

/* 'default' enter sequence for region SleepMode */
void SystemStateMachine::enseq_SleepMode_default()
{
    /* 'default' enter sequence for region SleepMode */
    react_SleepMode__entry_Default();
}

/* 'default' enter sequence for region KeyPressEvaluation */
void SystemStateMachine::enseq_KeyPressEvaluation_default()
{
    /* 'default' enter sequence for region KeyPressEvaluation */
    react_KeyPressEvaluation__entry_Default();
}

/* 'default' enter sequence for region r2 */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r2_default()
{
    /* 'default' enter sequence for region r2 */
    react_KeyPressEvaluation_LongPress_r2__entry_Default();
}

/* 'default' enter sequence for region r1 */
void SystemStateMachine::enseq_KeyPressEvaluation_LongPress_r1_default()
{
    /* 'default' enter sequence for region r1 */
    react_KeyPressEvaluation_LongPress_r1__entry_Default();
}

/* 'default' enter sequence for region Grinding */
void SystemStateMachine::enseq_Grinding_default()
{
    /* 'default' enter sequence for region Grinding */
    react_Grinding__entry_Default();
}

/* 'default' enter sequence for region PortaFilterInsertion */
void SystemStateMachine::enseq_PortaFilterInsertion_default()
{
    /* 'default' enter sequence for region PortaFilterInsertion */
    react_PortaFilterInsertion__entry_Default();
}

/* 'default' enter sequence for region RecipeEdit */
void SystemStateMachine::enseq_RecipeEdit_default()
{
    /* 'default' enter sequence for region RecipeEdit */
    react_RecipeEdit__entry_Default();
}

/* 'default' enter sequence for region r1 */
void SystemStateMachine::enseq_RecipeEdit_OrthogonalRecipeEdit_r1_default()
{
    /* 'default' enter sequence for region r1 */
    react_RecipeEdit_OrthogonalRecipeEdit_r1__entry_Default();
}

/* 'default' enter sequence for region r2 */
void SystemStateMachine::enseq_RecipeEdit_OrthogonalRecipeEdit_r2_default()
{
    /* 'default' enter sequence for region r2 */
    react_RecipeEdit_OrthogonalRecipeEdit_r2__entry_Default();
}

/* Default exit sequence for state Init */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_Init()
{
    /* Default exit sequence for state Init */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_Init );
    }
}

/* Default exit sequence for state ManualMode */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_ManualMode()
{
    /* Default exit sequence for state ManualMode */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_ManualMode );
    }
}

/* Default exit sequence for state Recipe4 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_Recipe4()
{
    /* Default exit sequence for state Recipe4 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_Recipe4 );
    }
}

/* Default exit sequence for state Recipe3 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_Recipe3()
{
    /* Default exit sequence for state Recipe3 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_Recipe3 );
    }
}

/* Default exit sequence for state Recipe2 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_Recipe2()
{
    /* Default exit sequence for state Recipe2 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_Recipe2 );
    }
}

/* Default exit sequence for state Recipe1 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_Recipe1()
{
    /* Default exit sequence for state Recipe1 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_Recipe1 );
    }
}

/* Default exit sequence for state DisplayTest */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DisplayTest()
{
    /* Default exit sequence for state DisplayTest */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_DisplayTest();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DisplayTest );
    }
}

/* Default exit sequence for state WiFi */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_WiFi()
{
    /* Default exit sequence for state WiFi */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_WiFi();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_WiFi );
    }
}

/* Default exit sequence for state Errors */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_Errors()
{
    /* Default exit sequence for state Errors */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_Errors();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_Errors );
    }
}

/* Default exit sequence for state AutoSleepEdit */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit()
{
    /* Default exit sequence for state AutoSleepEdit */
    exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1();
    exact_HemroE54SystemStateMachine_AutoSleepEdit();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
    }
}

/* Default exit sequence for state ShowBanner1 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1()
{
    /* Default exit sequence for state ShowBanner1 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1 );
    }
}

/* Default exit sequence for state ShowBanner2 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2()
{
    /* Default exit sequence for state ShowBanner2 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2 );
    }
}

/* Default exit sequence for state ShowBanner3 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3()
{
    /* Default exit sequence for state ShowBanner3 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3 );
    }
}

/* Default exit sequence for state Show5Min */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min()
{
    /* Default exit sequence for state Show5Min */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min );
    }
}

/* Default exit sequence for state Show3Min */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min()
{
    /* Default exit sequence for state Show3Min */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min );
    }
}

/* Default exit sequence for state ShowIntro1 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1()
{
    /* Default exit sequence for state ShowIntro1 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1 );
    }
}

/* Default exit sequence for state ShowIntro2 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2()
{
    /* Default exit sequence for state ShowIntro2 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2 );
    }
}

/* Default exit sequence for state ShowIntro3 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3()
{
    /* Default exit sequence for state ShowIntro3 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3 );
    }
}

/* Default exit sequence for state ShowIntro4 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4()
{
    /* Default exit sequence for state ShowIntro4 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4 );
    }
}

/* Default exit sequence for state Show10Min */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min()
{
    /* Default exit sequence for state Show10Min */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min );
    }
}

/* Default exit sequence for state Show20Min */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min()
{
    /* Default exit sequence for state Show20Min */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min );
    }
}

/* Default exit sequence for state Show30Min */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min()
{
    /* Default exit sequence for state Show30Min */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min );
    }
}

/* Default exit sequence for state WlanSettings */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_WlanSettings()
{
    /* Default exit sequence for state WlanSettings */
    exseq_HemroE54SystemStateMachine_WlanSettings_r1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings );
    }
}

/* Default exit sequence for state WlanOn */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn()
{
    /* Default exit sequence for state WlanOn */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_WlanOn );
    }
}

/* Default exit sequence for state WlanOff */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff()
{
    /* Default exit sequence for state WlanOff */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_WlanOff );
    }
}

/* Default exit sequence for state WlanReset */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset()
{
    /* Default exit sequence for state WlanReset */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_WlanReset );
    }
}

/* Default exit sequence for state AnnounceEdit */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit()
{
    /* Default exit sequence for state AnnounceEdit */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit );
    }
}

/* Default exit sequence for state EditRecipe1 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_EditRecipe1()
{
    /* Default exit sequence for state EditRecipe1 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_EditRecipe1 );
    }
}

/* Default exit sequence for state EditRecipe2 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_EditRecipe2()
{
    /* Default exit sequence for state EditRecipe2 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_EditRecipe2 );
    }
}

/* Default exit sequence for state EditRecipe3 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_EditRecipe3()
{
    /* Default exit sequence for state EditRecipe3 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_EditRecipe3 );
    }
}

/* Default exit sequence for state EditRecipe4 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_EditRecipe4()
{
    /* Default exit sequence for state EditRecipe4 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_EditRecipe4 );
    }
}

/* Default exit sequence for state GrindManual */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_GrindManual()
{
    /* Default exit sequence for state GrindManual */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_GrindManual );
    }
}

/* Default exit sequence for state GrindRecipe4 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_GrindRecipe4()
{
    /* Default exit sequence for state GrindRecipe4 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe4 );
    }
}

/* Default exit sequence for state GrindRecipe3 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_GrindRecipe3()
{
    /* Default exit sequence for state GrindRecipe3 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe3 );
    }
}

/* Default exit sequence for state GrindRecipe2 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_GrindRecipe2()
{
    /* Default exit sequence for state GrindRecipe2 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe2 );
    }
}

/* Default exit sequence for state GrindRecipe1 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_GrindRecipe1()
{
    /* Default exit sequence for state GrindRecipe1 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe1 );
    }
}

/* Default exit sequence for state Standby */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_Standby()
{
    /* Default exit sequence for state Standby */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_Standby );
    }
}

/* Default exit sequence for state DiscLifeTime */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime()
{
    /* Default exit sequence for state DiscLifeTime */
    exseq_HemroE54SystemStateMachine_DiscLifeTime_r1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime );
    }
}

/* Default exit sequence for state showDiscLabel */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel()
{
    /* Default exit sequence for state showDiscLabel */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel );
    }
}

/* Default exit sequence for state showDiscLifeTime */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime()
{
    /* Default exit sequence for state showDiscLifeTime */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime );
    }
}

/* Default exit sequence for state showResetOn */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn()
{
    /* Default exit sequence for state showResetOn */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn );
    }
}

/* Default exit sequence for state showResetOff */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff()
{
    /* Default exit sequence for state showResetOff */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff );
    }
}

/* Default exit sequence for state showIntro */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro()
{
    /* Default exit sequence for state showIntro */
    exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro );
    }
}

/* Default exit sequence for state showDash1 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1()
{
    /* Default exit sequence for state showDash1 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1 );
    }
}

/* Default exit sequence for state showDash2 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2()
{
    /* Default exit sequence for state showDash2 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2 );
    }
}

/* Default exit sequence for state showDash3 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3()
{
    /* Default exit sequence for state showDash3 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3 );
    }
}

/* Default exit sequence for state showDash4 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4()
{
    /* Default exit sequence for state showDash4 */
    stateConfVector[0]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 0;
    exact_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4 );
    }
}

/* Default exit sequence for state NormalOperation */
void SystemStateMachine::exseq_SleepMode_NormalOperation()
{
    /* Default exit sequence for state NormalOperation */
    stateConfVector[1]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 1;
    exact_SleepMode_NormalOperation();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::SleepMode_NormalOperation );
    }
}

/* Default exit sequence for state Standby */
void SystemStateMachine::exseq_SleepMode_Standby()
{
    /* Default exit sequence for state Standby */
    stateConfVector[1]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 1;
    exact_SleepMode_Standby();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::SleepMode_Standby );
    }
}

/* Default exit sequence for state BothButtonsPressed */
void SystemStateMachine::exseq_KeyPressEvaluation_BothButtonsPressed()
{
    /* Default exit sequence for state BothButtonsPressed */
    stateConfVector[2]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 2;
    exact_KeyPressEvaluation_BothButtonsPressed();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_BothButtonsPressed );
    }
}

/* Default exit sequence for state LongPressBothButtons */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPressBothButtons()
{
    /* Default exit sequence for state LongPressBothButtons */
    stateConfVector[2]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 2;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPressBothButtons );
    }
}

/* Default exit sequence for state LongPress */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress()
{
    /* Default exit sequence for state LongPress */
    exseq_KeyPressEvaluation_LongPress_r2();
    exseq_KeyPressEvaluation_LongPress_r1();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress );
    }
}

/* Default exit sequence for state StartButtonError */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r2_StartButtonError()
{
    /* Default exit sequence for state StartButtonError */
    stateConfVector[2]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 2;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonError );
    }
}

/* Default exit sequence for state LongPressStartButton */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r2_LongPressStartButton()
{
    /* Default exit sequence for state LongPressStartButton */
    stateConfVector[2]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 2;
    exact_KeyPressEvaluation_LongPress_r2_LongPressStartButton();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r2_LongPressStartButton );
    }
}

/* Default exit sequence for state StartButtonPressed */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r2_StartButtonPressed()
{
    /* Default exit sequence for state StartButtonPressed */
    stateConfVector[2]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 2;
    exact_KeyPressEvaluation_LongPress_r2_StartButtonPressed();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonPressed );
    }
}

/* Default exit sequence for state StartButtonReleased */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased()
{
    /* Default exit sequence for state StartButtonReleased */
    stateConfVector[2]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 2;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonReleased );
    }
}

/* Default exit sequence for state StartButtonPressedFromBoth */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth()
{
    /* Default exit sequence for state StartButtonPressedFromBoth */
    stateConfVector[2]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 2;
    exact_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth );
    }
}

/* Default exit sequence for state StartButtonLongPressedFromBoth */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth()
{
    /* Default exit sequence for state StartButtonLongPressedFromBoth */
    stateConfVector[2]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 2;
    exact_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth );
    }
}

/* Default exit sequence for state JogDialError */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r1_JogDialError()
{
    /* Default exit sequence for state JogDialError */
    stateConfVector[3]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 3;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialError );
    }
}

/* Default exit sequence for state LongPressJogDial */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r1_LongPressJogDial()
{
    /* Default exit sequence for state LongPressJogDial */
    stateConfVector[3]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 3;
    exact_KeyPressEvaluation_LongPress_r1_LongPressJogDial();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r1_LongPressJogDial );
    }
}

/* Default exit sequence for state JogDialPressed */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r1_JogDialPressed()
{
    /* Default exit sequence for state JogDialPressed */
    stateConfVector[3]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 3;
    exact_KeyPressEvaluation_LongPress_r1_JogDialPressed();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialPressed );
    }
}

/* Default exit sequence for state JogDialReleased */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r1_JogDialReleased()
{
    /* Default exit sequence for state JogDialReleased */
    stateConfVector[3]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 3;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialReleased );
    }
}

/* Default exit sequence for state JogDialPressedFromBoth */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth()
{
    /* Default exit sequence for state JogDialPressedFromBoth */
    stateConfVector[3]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 3;
    exact_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth );
    }
}

/* Default exit sequence for state JogDialLongPressedFromBoth */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth()
{
    /* Default exit sequence for state JogDialLongPressedFromBoth */
    stateConfVector[3]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 3;
    exact_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth );
    }
}

/* Default exit sequence for state VeryLongPressJogDial */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial()
{
    /* Default exit sequence for state VeryLongPressJogDial */
    stateConfVector[3]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 3;
    exact_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial );
    }
}

/* Default exit sequence for state Grinding */
void SystemStateMachine::exseq_Grinding_Grinding()
{
    /* Default exit sequence for state Grinding */
    stateConfVector[4]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 4;
    exact_Grinding_Grinding();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::Grinding_Grinding );
    }
}

/* Default exit sequence for state GrindingError */
void SystemStateMachine::exseq_Grinding_GrindingError()
{
    /* Default exit sequence for state GrindingError */
    stateConfVector[4]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 4;
    exact_Grinding_GrindingError();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::Grinding_GrindingError );
    }
}

/* Default exit sequence for state Idle */
void SystemStateMachine::exseq_Grinding_Idle()
{
    /* Default exit sequence for state Idle */
    stateConfVector[4]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 4;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::Grinding_Idle );
    }
}

/* Default exit sequence for state SaveGrindingResults */
void SystemStateMachine::exseq_Grinding_SaveGrindingResults()
{
    /* Default exit sequence for state SaveGrindingResults */
    stateConfVector[4]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 4;
    exact_Grinding_SaveGrindingResults();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::Grinding_SaveGrindingResults );
    }
}

/* Default exit sequence for state Idle */
void SystemStateMachine::exseq_PortaFilterInsertion_Idle()
{
    /* Default exit sequence for state Idle */
    stateConfVector[5]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 5;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::PortaFilterInsertion_Idle );
    }
}

/* Default exit sequence for state OrthogonalRecipeEdit */
void SystemStateMachine::exseq_RecipeEdit_OrthogonalRecipeEdit()
{
    /* Default exit sequence for state OrthogonalRecipeEdit */
    exseq_RecipeEdit_OrthogonalRecipeEdit_r1();
    exseq_RecipeEdit_OrthogonalRecipeEdit_r2();
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit );
    }
}

/* Default exit sequence for state EditDigit1 */
void SystemStateMachine::exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1()
{
    /* Default exit sequence for state EditDigit1 */
    stateConfVector[6]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 6;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1 );
    }
}

/* Default exit sequence for state EditDigit2 */
void SystemStateMachine::exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2()
{
    /* Default exit sequence for state EditDigit2 */
    stateConfVector[6]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 6;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2 );
    }
}

/* Default exit sequence for state EditDigit3 */
void SystemStateMachine::exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3()
{
    /* Default exit sequence for state EditDigit3 */
    stateConfVector[6]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 6;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3 );
    }
}

/* Default exit sequence for state EditRecipe */
void SystemStateMachine::exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe()
{
    /* Default exit sequence for state EditRecipe */
    stateConfVector[6]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 6;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe );
    }
}

/* Default exit sequence for state EditRecipe */
void SystemStateMachine::exseq_RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe()
{
    /* Default exit sequence for state EditRecipe */
    stateConfVector[7]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 7;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe );
    }
}

/* Default exit sequence for state Idle */
void SystemStateMachine::exseq_RecipeEdit_Idle()
{
    /* Default exit sequence for state Idle */
    stateConfVector[6]      = SystemStateMachine_last_state;
    stateConfVectorPosition = 6;
    if ( ifaceTraceObserver != sc_null )
    {
        ifaceTraceObserver->stateExited( SystemStateMachine::RecipeEdit_Idle );
    }
}

/* Default exit sequence for region HemroE54SystemStateMachine */
void SystemStateMachine::exseq_HemroE54SystemStateMachine()
{
    /*
       Default exit sequence for region HemroE54SystemStateMachine
       Handle exit of all possible states (of SystemStateMachine.HemroE54SystemStateMachine) at position 0...*/
    switch ( stateConfVector[ 0 ] )
    {
        case HemroE54SystemStateMachine_Init:
        {
            exseq_HemroE54SystemStateMachine_Init();
            break;
        }
        case HemroE54SystemStateMachine_ManualMode:
        {
            exseq_HemroE54SystemStateMachine_ManualMode();
            break;
        }
        case HemroE54SystemStateMachine_Recipe4:
        {
            exseq_HemroE54SystemStateMachine_Recipe4();
            break;
        }
        case HemroE54SystemStateMachine_Recipe3:
        {
            exseq_HemroE54SystemStateMachine_Recipe3();
            break;
        }
        case HemroE54SystemStateMachine_Recipe2:
        {
            exseq_HemroE54SystemStateMachine_Recipe2();
            break;
        }
        case HemroE54SystemStateMachine_Recipe1:
        {
            exseq_HemroE54SystemStateMachine_Recipe1();
            break;
        }
        case HemroE54SystemStateMachine_DisplayTest:
        {
            exseq_HemroE54SystemStateMachine_DisplayTest();
            break;
        }
        case HemroE54SystemStateMachine_WiFi:
        {
            exseq_HemroE54SystemStateMachine_WiFi();
            break;
        }
        case HemroE54SystemStateMachine_Errors:
        {
            exseq_HemroE54SystemStateMachine_Errors();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min();
            exact_HemroE54SystemStateMachine_AutoSleepEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit );
            }
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanOn:
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings );
            }
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanOff:
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings );
            }
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanReset:
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings );
            }
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit:
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_WlanSettings );
            }
            break;
        }
        case HemroE54SystemStateMachine_EditRecipe1:
        {
            exseq_HemroE54SystemStateMachine_EditRecipe1();
            break;
        }
        case HemroE54SystemStateMachine_EditRecipe2:
        {
            exseq_HemroE54SystemStateMachine_EditRecipe2();
            break;
        }
        case HemroE54SystemStateMachine_EditRecipe3:
        {
            exseq_HemroE54SystemStateMachine_EditRecipe3();
            break;
        }
        case HemroE54SystemStateMachine_EditRecipe4:
        {
            exseq_HemroE54SystemStateMachine_EditRecipe4();
            break;
        }
        case HemroE54SystemStateMachine_GrindManual:
        {
            exseq_HemroE54SystemStateMachine_GrindManual();
            break;
        }
        case HemroE54SystemStateMachine_GrindRecipe4:
        {
            exseq_HemroE54SystemStateMachine_GrindRecipe4();
            break;
        }
        case HemroE54SystemStateMachine_GrindRecipe3:
        {
            exseq_HemroE54SystemStateMachine_GrindRecipe3();
            break;
        }
        case HemroE54SystemStateMachine_GrindRecipe2:
        {
            exseq_HemroE54SystemStateMachine_GrindRecipe2();
            break;
        }
        case HemroE54SystemStateMachine_GrindRecipe1:
        {
            exseq_HemroE54SystemStateMachine_GrindRecipe1();
            break;
        }
        case HemroE54SystemStateMachine_Standby:
        {
            exseq_HemroE54SystemStateMachine_Standby();
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime );
            }
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime );
            }
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime );
            }
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime );
            }
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro );
            }
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime );
            }
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro );
            }
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime );
            }
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro );
            }
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime );
            }
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro );
            }
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime );
            }
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region r1 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1()
{
    /*
       Default exit sequence for region r1
       Handle exit of all possible states (of SystemStateMachine.HemroE54SystemStateMachine.AutoSleepEdit.r1) at position 0...*/
    switch ( stateConfVector[ 0 ] )
    {
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min();
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min:
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min();
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region r1 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_WlanSettings_r1()
{
    /*
       Default exit sequence for region r1
       Handle exit of all possible states (of SystemStateMachine.HemroE54SystemStateMachine.WlanSettings.r1) at position 0...*/
    switch ( stateConfVector[ 0 ] )
    {
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanOn:
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn();
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanOff:
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff();
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanReset:
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset();
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit:
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit();
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region r1 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1()
{
    /*
       Default exit sequence for region r1
       Handle exit of all possible states (of SystemStateMachine.HemroE54SystemStateMachine.DiscLifeTime.r1) at position 0...*/
    switch ( stateConfVector[ 0 ] )
    {
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel();
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime();
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn();
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff();
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro );
            }
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro );
            }
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro );
            }
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro );
            }
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region r1 */
void SystemStateMachine::exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1()
{
    /*
       Default exit sequence for region r1
       Handle exit of all possible states (of SystemStateMachine.HemroE54SystemStateMachine.DiscLifeTime.r1.showIntro.r1) at position 0...*/
    switch ( stateConfVector[ 0 ] )
    {
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1();
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2();
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3();
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4:
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4();
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region SleepMode */
void SystemStateMachine::exseq_SleepMode()
{
    /*
       Default exit sequence for region SleepMode
       Handle exit of all possible states (of SystemStateMachine.SleepMode) at position 1...*/
    switch ( stateConfVector[ 1 ] )
    {
        case SleepMode_NormalOperation:
        {
            exseq_SleepMode_NormalOperation();
            break;
        }
        case SleepMode_Standby:
        {
            exseq_SleepMode_Standby();
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region KeyPressEvaluation */
void SystemStateMachine::exseq_KeyPressEvaluation()
{
    /*
       Default exit sequence for region KeyPressEvaluation
       Handle exit of all possible states (of SystemStateMachine.KeyPressEvaluation) at position 2...*/
    switch ( stateConfVector[ 2 ] )
    {
        case KeyPressEvaluation_BothButtonsPressed:
        {
            exseq_KeyPressEvaluation_BothButtonsPressed();
            break;
        }
        case KeyPressEvaluation_LongPressBothButtons:
        {
            exseq_KeyPressEvaluation_LongPressBothButtons();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_StartButtonError:
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonError();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_LongPressStartButton:
        {
            exseq_KeyPressEvaluation_LongPress_r2_LongPressStartButton();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_StartButtonPressed:
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonPressed();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_StartButtonReleased:
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth:
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth:
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth();
            break;
        }
        default:
            break;
    }
    /* Handle exit of all possible states (of SystemStateMachine.KeyPressEvaluation) at position 3... */
    switch ( stateConfVector[ 3 ] )
    {
        case KeyPressEvaluation_LongPress_r1_JogDialError:
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialError();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress );
            }
            break;
        }
        case KeyPressEvaluation_LongPress_r1_LongPressJogDial:
        {
            exseq_KeyPressEvaluation_LongPress_r1_LongPressJogDial();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress );
            }
            break;
        }
        case KeyPressEvaluation_LongPress_r1_JogDialPressed:
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialPressed();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress );
            }
            break;
        }
        case KeyPressEvaluation_LongPress_r1_JogDialReleased:
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialReleased();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress );
            }
            break;
        }
        case KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth:
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress );
            }
            break;
        }
        case KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth:
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress );
            }
            break;
        }
        case KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial:
        {
            exseq_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::KeyPressEvaluation_LongPress );
            }
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region r2 */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r2()
{
    /*
       Default exit sequence for region r2
       Handle exit of all possible states (of SystemStateMachine.KeyPressEvaluation.LongPress.r2) at position 2...*/
    switch ( stateConfVector[ 2 ] )
    {
        case KeyPressEvaluation_LongPress_r2_StartButtonError:
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonError();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_LongPressStartButton:
        {
            exseq_KeyPressEvaluation_LongPress_r2_LongPressStartButton();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_StartButtonPressed:
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonPressed();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_StartButtonReleased:
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth:
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth();
            break;
        }
        case KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth:
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth();
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region r1 */
void SystemStateMachine::exseq_KeyPressEvaluation_LongPress_r1()
{
    /*
       Default exit sequence for region r1
       Handle exit of all possible states (of SystemStateMachine.KeyPressEvaluation.LongPress.r1) at position 3...*/
    switch ( stateConfVector[ 3 ] )
    {
        case KeyPressEvaluation_LongPress_r1_JogDialError:
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialError();
            break;
        }
        case KeyPressEvaluation_LongPress_r1_LongPressJogDial:
        {
            exseq_KeyPressEvaluation_LongPress_r1_LongPressJogDial();
            break;
        }
        case KeyPressEvaluation_LongPress_r1_JogDialPressed:
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialPressed();
            break;
        }
        case KeyPressEvaluation_LongPress_r1_JogDialReleased:
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialReleased();
            break;
        }
        case KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth:
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth();
            break;
        }
        case KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth:
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth();
            break;
        }
        case KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial:
        {
            exseq_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial();
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region Grinding */
void SystemStateMachine::exseq_Grinding()
{
    /*
       Default exit sequence for region Grinding
       Handle exit of all possible states (of SystemStateMachine.Grinding) at position 4...*/
    switch ( stateConfVector[ 4 ] )
    {
        case Grinding_Grinding:
        {
            exseq_Grinding_Grinding();
            break;
        }
        case Grinding_GrindingError:
        {
            exseq_Grinding_GrindingError();
            break;
        }
        case Grinding_Idle:
        {
            exseq_Grinding_Idle();
            break;
        }
        case Grinding_SaveGrindingResults:
        {
            exseq_Grinding_SaveGrindingResults();
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region PortaFilterInsertion */
void SystemStateMachine::exseq_PortaFilterInsertion()
{
    /*
       Default exit sequence for region PortaFilterInsertion
       Handle exit of all possible states (of SystemStateMachine.PortaFilterInsertion) at position 5...*/
    switch ( stateConfVector[ 5 ] )
    {
        case PortaFilterInsertion_Idle:
        {
            exseq_PortaFilterInsertion_Idle();
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region RecipeEdit */
void SystemStateMachine::exseq_RecipeEdit()
{
    /*
       Default exit sequence for region RecipeEdit
       Handle exit of all possible states (of SystemStateMachine.RecipeEdit) at position 6...*/
    switch ( stateConfVector[ 6 ] )
    {
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1:
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1();
            break;
        }
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2:
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2();
            break;
        }
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3:
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3();
            break;
        }
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe:
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe();
            break;
        }
        case RecipeEdit_Idle:
        {
            exseq_RecipeEdit_Idle();
            break;
        }
        default:
            break;
    }
    /* Handle exit of all possible states (of SystemStateMachine.RecipeEdit) at position 7... */
    switch ( stateConfVector[ 7 ] )
    {
        case RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe:
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateExited( SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit );
            }
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region r1 */
void SystemStateMachine::exseq_RecipeEdit_OrthogonalRecipeEdit_r1()
{
    /*
       Default exit sequence for region r1
       Handle exit of all possible states (of SystemStateMachine.RecipeEdit.OrthogonalRecipeEdit.r1) at position 6...*/
    switch ( stateConfVector[ 6 ] )
    {
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1:
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1();
            break;
        }
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2:
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2();
            break;
        }
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3:
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3();
            break;
        }
        case RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe:
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe();
            break;
        }
        default:
            break;
    }
}

/* Default exit sequence for region r2 */
void SystemStateMachine::exseq_RecipeEdit_OrthogonalRecipeEdit_r2()
{
    /*
       Default exit sequence for region r2
       Handle exit of all possible states (of SystemStateMachine.RecipeEdit.OrthogonalRecipeEdit.r2) at position 7...*/
    switch ( stateConfVector[ 7 ] )
    {
        case RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe:
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe();
            break;
        }
        default:
            break;
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine__choice_0()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine__choice_0_tr1_tr1() )
    {
        effect_HemroE54SystemStateMachine__choice_0_tr1();
    }
    else
    {
        effect_HemroE54SystemStateMachine__choice_0_tr0();
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine__choice_1()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine__choice_1_tr0_tr0() )
    {
        effect_HemroE54SystemStateMachine__choice_1_tr0();
    }
    else
    {
        effect_HemroE54SystemStateMachine__choice_1_tr1();
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine__choice_2()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine__choice_2_tr0_tr0() )
    {
        effect_HemroE54SystemStateMachine__choice_2_tr0();
    }
    else
    {
        effect_HemroE54SystemStateMachine__choice_2_tr1();
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr1_tr1() )
    {
        effect_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr1();
    }
    else
    {
        if ( check_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr2_tr2() )
        {
            effect_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr2();
        }
        else
        {
            if ( check_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr3_tr3() )
            {
                effect_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr3();
            }
            else
            {
                if ( check_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr4_tr4() )
                {
                    effect_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr4();
                }
                else
                {
                    effect_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0_tr0();
                }
            }
        }
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine_WlanSettings_r1__choice_0()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine_WlanSettings_r1__choice_0_tr1_tr1() )
    {
        effect_HemroE54SystemStateMachine_WlanSettings_r1__choice_0_tr1();
    }
    else
    {
        effect_HemroE54SystemStateMachine_WlanSettings_r1__choice_0_tr0();
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine__choice_3()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine__choice_3_tr0_tr0() )
    {
        effect_HemroE54SystemStateMachine__choice_3_tr0();
    }
    else
    {
        effect_HemroE54SystemStateMachine__choice_3_tr1();
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine__choice_4()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine__choice_4_tr1_tr1() )
    {
        effect_HemroE54SystemStateMachine__choice_4_tr1();
    }
    else
    {
        effect_HemroE54SystemStateMachine__choice_4_tr0();
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine__choice_5()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine__choice_5_tr0_tr0() )
    {
        effect_HemroE54SystemStateMachine__choice_5_tr0();
    }
    else
    {
        if ( check_HemroE54SystemStateMachine__choice_5_tr2_tr2() )
        {
            effect_HemroE54SystemStateMachine__choice_5_tr2();
        }
        else
        {
            if ( check_HemroE54SystemStateMachine__choice_5_tr3_tr3() )
            {
                effect_HemroE54SystemStateMachine__choice_5_tr3();
            }
            else
            {
                if ( check_HemroE54SystemStateMachine__choice_5_tr4_tr4() )
                {
                    effect_HemroE54SystemStateMachine__choice_5_tr4();
                }
                else
                {
                    effect_HemroE54SystemStateMachine__choice_5_tr1();
                }
            }
        }
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine__choice_6()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine__choice_6_tr1_tr1() )
    {
        effect_HemroE54SystemStateMachine__choice_6_tr1();
    }
    else
    {
        effect_HemroE54SystemStateMachine__choice_6_tr0();
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine__choice_7()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine__choice_7_tr1_tr1() )
    {
        effect_HemroE54SystemStateMachine__choice_7_tr1();
    }
    else
    {
        effect_HemroE54SystemStateMachine__choice_7_tr0();
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_HemroE54SystemStateMachine__choice_8()
{
    /* The reactions of state null. */
    if ( check_HemroE54SystemStateMachine__choice_8_tr1_tr1() )
    {
        effect_HemroE54SystemStateMachine__choice_8_tr1();
    }
    else
    {
        effect_HemroE54SystemStateMachine__choice_8_tr0();
    }
}

/* The reactions of state null. */
void SystemStateMachine::react_Grinding__choice_0()
{
    /* The reactions of state null. */
    if ( check_Grinding__choice_0_tr0_tr0() )
    {
        effect_Grinding__choice_0_tr0();
    }
    else
    {
        if ( check_Grinding__choice_0_tr2_tr2() )
        {
            effect_Grinding__choice_0_tr2();
        }
        else
        {
            effect_Grinding__choice_0_tr1();
        }
    }
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_HemroE54SystemStateMachine__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_HemroE54SystemStateMachine_Init_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_HemroE54SystemStateMachine_AutoSleepEdit_r1__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_HemroE54SystemStateMachine_WlanSettings_r1__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_HemroE54SystemStateMachine_DiscLifeTime_r1__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1__entry_Default()
{
    /* Default react sequence for initial entry  */
    tempDurationCounter = 0;
    enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_SleepMode__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_SleepMode_NormalOperation_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_KeyPressEvaluation_LongPress_r2__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_KeyPressEvaluation_LongPress_r1__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_KeyPressEvaluation_LongPress_r1_JogDialReleased_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_KeyPressEvaluation__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_KeyPressEvaluation_LongPress_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_Grinding__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_Grinding_Idle_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_PortaFilterInsertion__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_PortaFilterInsertion_Idle_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_RecipeEdit_OrthogonalRecipeEdit_r1__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_RecipeEdit_OrthogonalRecipeEdit_r2__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe_default();
}

/* Default react sequence for initial entry  */
void SystemStateMachine::react_RecipeEdit__entry_Default()
{
    /* Default react sequence for initial entry  */
    enseq_RecipeEdit_Idle_default();
}

/* The reactions of exit default. */
void SystemStateMachine::react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default()
{
    /* The reactions of exit default. */
    effect_HemroE54SystemStateMachine_AutoSleepEdit_tr0();
}

/* The reactions of exit default. */
void SystemStateMachine::react_HemroE54SystemStateMachine_WlanSettings_r1__exit_Default()
{
    /* The reactions of exit default. */
    effect_HemroE54SystemStateMachine_WlanSettings_tr0();
}

/* The reactions of exit default. */
void SystemStateMachine::react_HemroE54SystemStateMachine_DiscLifeTime_r1__exit_Default()
{
    /* The reactions of exit default. */
    effect_HemroE54SystemStateMachine_DiscLifeTime_tr0();
}

/* The reactions of exit completed. */
void SystemStateMachine::react_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_completed()
{
    /* The reactions of exit completed. */
    effect_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_tr0();
}

/* The reactions of exit aborted. */
void SystemStateMachine::react_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_aborted()
{
    /* The reactions of exit aborted. */
    effect_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_tr1();
}

/* The reactions of exit default. */
void SystemStateMachine::react_RecipeEdit_OrthogonalRecipeEdit_r2__exit_Default()
{
    /* The reactions of exit default. */
    effect_RecipeEdit_OrthogonalRecipeEdit_tr0();
}

sc_integer SystemStateMachine::react( const sc_integer transitioned_before )
{
    /* State machine reactions. */
    return transitioned_before;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_Init_react( const sc_integer transitioned_before )
{
    /* The reactions of state Init. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceApplication.initCompleted_raised )
        {
            exseq_HemroE54SystemStateMachine_Init();
            enseq_HemroE54SystemStateMachine_DisplayTest_default();
            transitioned_after = 0;
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_ManualMode_react( const sc_integer transitioned_before )
{
    /* The reactions of state ManualMode. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ( startButtonShortPress_raised )
             || ( ifaceGpioDrv.portaFilterInserted_raised ) )
        {
            exseq_HemroE54SystemStateMachine_ManualMode();
            ifaceGrinder.ifaceGrinderOperationCallback->tryStartGrinding();
            enseq_HemroE54SystemStateMachine_GrindManual_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialRight_raised )
            {
                exseq_HemroE54SystemStateMachine_ManualMode();
                react_HemroE54SystemStateMachine__choice_6();
                transitioned_after = 0;
            }
            else
            {
                if ( ifaceGpioDrv.jogDialLeft_raised )
                {
                    exseq_HemroE54SystemStateMachine_ManualMode();
                    react_HemroE54SystemStateMachine__choice_7();
                    transitioned_after = 0;
                }
                else
                {
                    if ( jogDialLongPress_raised )
                    {
                        exseq_HemroE54SystemStateMachine_ManualMode();
                        internalEventQueue.push_back( new SctEvent_Internal_manualForceStandby( Internal_manualForceStandby ) );
                        enseq_HemroE54SystemStateMachine_ManualMode_default();
                        transitioned_after = 0;
                    }
                    else
                    {
                        if ( bothButtonsPressed_raised )
                        {
                            exseq_HemroE54SystemStateMachine_ManualMode();
                            react_HemroE54SystemStateMachine__choice_8();
                            transitioned_after = 0;
                        }
                        else
                        {
                            if ( ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isFatalErrorActive() ) == ( true ) )
                            {
                                exseq_HemroE54SystemStateMachine_ManualMode();
                                react_HemroE54SystemStateMachine__choice_2();
                                transitioned_after = 0;
                            }
                            else
                            {
                                if ( standbyStarted_raised )
                                {
                                    exseq_HemroE54SystemStateMachine_ManualMode();
                                    enseq_HemroE54SystemStateMachine_Standby_default();
                                    transitioned_after = 0;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_Recipe4_react( const sc_integer transitioned_before )
{
    /* The reactions of state Recipe4. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            exseq_HemroE54SystemStateMachine_Recipe4();
            enseq_HemroE54SystemStateMachine_Recipe3_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialRight_raised )
            {
                exseq_HemroE54SystemStateMachine_Recipe4();
                enseq_HemroE54SystemStateMachine_WiFi_default();
                transitioned_after = 0;
            }
            else
            {
                if ( ( startButtonShortPress_raised )
                     || ( portaFilterSaveInserted_raised ) )
                {
                    exseq_HemroE54SystemStateMachine_Recipe4();
                    ifaceGrinder.ifaceGrinderOperationCallback->tryStartGrinding();
                    enseq_HemroE54SystemStateMachine_GrindRecipe4_default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isSignificantErrorActive() ) == ( true ) )
                    {
                        exseq_HemroE54SystemStateMachine_Recipe4();
                        react_HemroE54SystemStateMachine__choice_2();
                        transitioned_after = 0;
                    }
                    else
                    {
                        if ( jogDialLongPress_raised )
                        {
                            exseq_HemroE54SystemStateMachine_Recipe4();
                            ifaceGrinder.ifaceGrinderOperationCallback->tryStartRecipeEdit( 3 );
                            enseq_HemroE54SystemStateMachine_EditRecipe4_default();
                            transitioned_after = 0;
                        }
                        else
                        {
                            if ( standbyStarted_raised )
                            {
                                exseq_HemroE54SystemStateMachine_Recipe4();
                                enseq_HemroE54SystemStateMachine_Standby_default();
                                transitioned_after = 0;
                            }
                            else
                            {
                                if ( bothButtonsPressed_raised )
                                {
                                    exseq_HemroE54SystemStateMachine_Recipe4();
                                    enseq_HemroE54SystemStateMachine_DiscLifeTime_default();
                                    transitioned_after = 0;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_Recipe3_react( const sc_integer transitioned_before )
{
    /* The reactions of state Recipe3. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            exseq_HemroE54SystemStateMachine_Recipe3();
            enseq_HemroE54SystemStateMachine_Recipe2_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialRight_raised )
            {
                exseq_HemroE54SystemStateMachine_Recipe3();
                enseq_HemroE54SystemStateMachine_Recipe4_default();
                transitioned_after = 0;
            }
            else
            {
                if ( ( startButtonShortPress_raised )
                     || ( portaFilterSaveInserted_raised ) )
                {
                    exseq_HemroE54SystemStateMachine_Recipe3();
                    ifaceGrinder.ifaceGrinderOperationCallback->tryStartGrinding();
                    enseq_HemroE54SystemStateMachine_GrindRecipe3_default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isSignificantErrorActive() ) == ( true ) )
                    {
                        exseq_HemroE54SystemStateMachine_Recipe3();
                        react_HemroE54SystemStateMachine__choice_2();
                        transitioned_after = 0;
                    }
                    else
                    {
                        if ( jogDialLongPress_raised )
                        {
                            exseq_HemroE54SystemStateMachine_Recipe3();
                            ifaceGrinder.ifaceGrinderOperationCallback->tryStartRecipeEdit( 2 );
                            enseq_HemroE54SystemStateMachine_EditRecipe3_default();
                            transitioned_after = 0;
                        }
                        else
                        {
                            if ( standbyStarted_raised )
                            {
                                exseq_HemroE54SystemStateMachine_Recipe3();
                                enseq_HemroE54SystemStateMachine_Standby_default();
                                transitioned_after = 0;
                            }
                            else
                            {
                                if ( bothButtonsPressed_raised )
                                {
                                    exseq_HemroE54SystemStateMachine_Recipe3();
                                    enseq_HemroE54SystemStateMachine_DiscLifeTime_default();
                                    transitioned_after = 0;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_Recipe2_react( const sc_integer transitioned_before )
{
    /* The reactions of state Recipe2. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            exseq_HemroE54SystemStateMachine_Recipe2();
            enseq_HemroE54SystemStateMachine_Recipe1_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialRight_raised )
            {
                exseq_HemroE54SystemStateMachine_Recipe2();
                enseq_HemroE54SystemStateMachine_Recipe3_default();
                transitioned_after = 0;
            }
            else
            {
                if ( ( startButtonShortPress_raised )
                     || ( portaFilterSaveInserted_raised ) )
                {
                    exseq_HemroE54SystemStateMachine_Recipe2();
                    ifaceGrinder.ifaceGrinderOperationCallback->tryStartGrinding();
                    enseq_HemroE54SystemStateMachine_GrindRecipe2_default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isSignificantErrorActive() ) == ( true ) )
                    {
                        exseq_HemroE54SystemStateMachine_Recipe2();
                        react_HemroE54SystemStateMachine__choice_2();
                        transitioned_after = 0;
                    }
                    else
                    {
                        if ( jogDialLongPress_raised )
                        {
                            exseq_HemroE54SystemStateMachine_Recipe2();
                            ifaceGrinder.ifaceGrinderOperationCallback->tryStartRecipeEdit( 1 );
                            enseq_HemroE54SystemStateMachine_EditRecipe2_default();
                            transitioned_after = 0;
                        }
                        else
                        {
                            if ( standbyStarted_raised )
                            {
                                exseq_HemroE54SystemStateMachine_Recipe2();
                                enseq_HemroE54SystemStateMachine_Standby_default();
                                transitioned_after = 0;
                            }
                            else
                            {
                                if ( bothButtonsPressed_raised )
                                {
                                    exseq_HemroE54SystemStateMachine_Recipe2();
                                    enseq_HemroE54SystemStateMachine_DiscLifeTime_default();
                                    transitioned_after = 0;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_Recipe1_react( const sc_integer transitioned_before )
{
    /* The reactions of state Recipe1. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            exseq_HemroE54SystemStateMachine_Recipe1();
            enseq_HemroE54SystemStateMachine_ManualMode_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialRight_raised )
            {
                exseq_HemroE54SystemStateMachine_Recipe1();
                enseq_HemroE54SystemStateMachine_Recipe2_default();
                transitioned_after = 0;
            }
            else
            {
                if ( ( startButtonShortPress_raised )
                     || ( portaFilterSaveInserted_raised ) )
                {
                    exseq_HemroE54SystemStateMachine_Recipe1();
                    ifaceGrinder.ifaceGrinderOperationCallback->tryStartGrinding();
                    enseq_HemroE54SystemStateMachine_GrindRecipe1_default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isSignificantErrorActive() ) == ( true ) )
                    {
                        exseq_HemroE54SystemStateMachine_Recipe1();
                        react_HemroE54SystemStateMachine__choice_2();
                        transitioned_after = 0;
                    }
                    else
                    {
                        if ( jogDialLongPress_raised )
                        {
                            exseq_HemroE54SystemStateMachine_Recipe1();
                            ifaceGrinder.ifaceGrinderOperationCallback->tryStartRecipeEdit( 0 );
                            enseq_HemroE54SystemStateMachine_EditRecipe1_default();
                            transitioned_after = 0;
                        }
                        else
                        {
                            if ( standbyStarted_raised )
                            {
                                exseq_HemroE54SystemStateMachine_Recipe1();
                                enseq_HemroE54SystemStateMachine_Standby_default();
                                transitioned_after = 0;
                            }
                            else
                            {
                                if ( bothButtonsPressed_raised )
                                {
                                    exseq_HemroE54SystemStateMachine_Recipe1();
                                    enseq_HemroE54SystemStateMachine_DiscLifeTime_default();
                                    transitioned_after = 0;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DisplayTest_react( const sc_integer transitioned_before )
{
    /* The reactions of state DisplayTest. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[0] )
        {
            exseq_HemroE54SystemStateMachine_DisplayTest();
            react_HemroE54SystemStateMachine__choice_2();
            transitioned_after = 0;
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_WiFi_react( const sc_integer transitioned_before )
{
    /* The reactions of state WiFi. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialRight_raised )
        {
            exseq_HemroE54SystemStateMachine_WiFi();
            react_HemroE54SystemStateMachine__choice_0();
            transitioned_after = 0;
        }
        else
        {
            if ( ( timeEvents[1] )
                 || ( ifaceErrorCtrl.significantErrorChange_raised ) )
            {
                exseq_HemroE54SystemStateMachine_WiFi();
                react_HemroE54SystemStateMachine__choice_2();
                transitioned_after = 0;
            }
            else
            {
                if ( ifaceGpioDrv.jogDialPressed_raised )
                {
                    exseq_HemroE54SystemStateMachine_WiFi();
                    enseq_HemroE54SystemStateMachine_WlanSettings_default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ifaceGpioDrv.jogDialLeft_raised )
                    {
                        exseq_HemroE54SystemStateMachine_WiFi();
                        enseq_HemroE54SystemStateMachine_Recipe4_default();
                        transitioned_after = 0;
                    }
                }
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_Errors_react( const sc_integer transitioned_before )
{
    /* The reactions of state Errors. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialRight_raised )
        {
            exseq_HemroE54SystemStateMachine_Errors();
            react_HemroE54SystemStateMachine__choice_4();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialLeft_raised )
            {
                exseq_HemroE54SystemStateMachine_Errors();
                react_HemroE54SystemStateMachine__choice_3();
                transitioned_after = 0;
            }
            else
            {
                if ( timeEvents[2] )
                {
                    exseq_HemroE54SystemStateMachine_Errors();
                    enseq_HemroE54SystemStateMachine_Errors_default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ( ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->errorsPresent() ) == ( false ) )
                         || ( ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isDegradedModeActive() ) == ( true ) ) )
                    {
                        exseq_HemroE54SystemStateMachine_Errors();
                        react_HemroE54SystemStateMachine__choice_2();
                        transitioned_after = 0;
                    }
                    else
                    {
                        if ( standbyStarted_raised )
                        {
                            exseq_HemroE54SystemStateMachine_Errors();
                            enseq_HemroE54SystemStateMachine_Standby_default();
                            transitioned_after = 0;
                        }
                    }
                }
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_react( const sc_integer transitioned_before )
{
    /* The reactions of state AutoSleepEdit. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1_react( const sc_integer transitioned_before )
{
    /* The reactions of state ShowBanner1. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[3] )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1();
            enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2_default();
            HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGpioDrv.startButtonPressed_raised )
                 || ( ifaceGpioDrv.jogDialPressed_raised ) )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1();
                react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2_react( const sc_integer transitioned_before )
{
    /* The reactions of state ShowBanner2. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[4] )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2();
            enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3_default();
            HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGpioDrv.startButtonPressed_raised )
                 || ( ifaceGpioDrv.jogDialPressed_raised ) )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2();
                react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3_react( const sc_integer transitioned_before )
{
    /* The reactions of state ShowBanner3. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[5] )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3();
            react_HemroE54SystemStateMachine_AutoSleepEdit_r1__choice_0();
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGpioDrv.startButtonPressed_raised )
                 || ( ifaceGpioDrv.jogDialPressed_raised ) )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3();
                react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min_react( const sc_integer transitioned_before )
{
    /* The reactions of state Show5Min. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( jogDialLongPress_raised )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min();
            ifaceConfig.ifaceConfigOperationCallback->setSleepTimeS( 300 );
            react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialLeft_raised )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min();
                enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min_default();
                HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
                transitioned_after = 0;
            }
            else
            {
                if ( ( startButtonShortPress_raised )
                     || ( ( jogDialShortPress_raised )
                          || ( timeoutEditMode_raised ) ) )
                {
                    exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min();
                    react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ifaceGpioDrv.jogDialRight_raised )
                    {
                        exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min();
                        enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min_default();
                        HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
                        transitioned_after = 0;
                    }
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min_react( const sc_integer transitioned_before )
{
    /* The reactions of state Show3Min. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( jogDialLongPress_raised )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min();
            ifaceConfig.ifaceConfigOperationCallback->setSleepTimeS( 180 );
            react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialRight_raised )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min();
                enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min_default();
                HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
                transitioned_after = 0;
            }
            else
            {
                if ( ( startButtonShortPress_raised )
                     || ( ( jogDialShortPress_raised )
                          || ( timeoutEditMode_raised ) ) )
                {
                    exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min();
                    react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ifaceGpioDrv.jogDialLeft_raised )
                    {
                        exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min();
                        enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min_default();
                        HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
                        transitioned_after = 0;
                    }
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1_react( const sc_integer transitioned_before )
{
    /* The reactions of state ShowIntro1. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[6] )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1();
            enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2_default();
            HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGpioDrv.jogDialLeft_raised )
                 || ( ( ifaceGpioDrv.jogDialRight_raised )
                      || ( bothButtonsReleased_raised ) ) )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1();
                react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2_react( const sc_integer transitioned_before )
{
    /* The reactions of state ShowIntro2. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[7] )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2();
            enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3_default();
            HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGpioDrv.jogDialLeft_raised )
                 || ( ( ifaceGpioDrv.jogDialRight_raised )
                      || ( bothButtonsReleased_raised ) ) )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2();
                react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3_react( const sc_integer transitioned_before )
{
    /* The reactions of state ShowIntro3. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[8] )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3();
            enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4_default();
            HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGpioDrv.jogDialLeft_raised )
                 || ( ( ifaceGpioDrv.jogDialRight_raised )
                      || ( bothButtonsReleased_raised ) ) )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3();
                react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4_react( const sc_integer transitioned_before )
{
    /* The reactions of state ShowIntro4. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[9] )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4();
            enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1_default();
            HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGpioDrv.jogDialLeft_raised )
                 || ( ( ifaceGpioDrv.jogDialRight_raised )
                      || ( bothButtonsReleased_raised ) ) )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4();
                react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min_react( const sc_integer transitioned_before )
{
    /* The reactions of state Show10Min. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min();
            enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min_default();
            HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialRight_raised )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min();
                enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min_default();
                HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
                transitioned_after = 0;
            }
            else
            {
                if ( ( startButtonShortPress_raised )
                     || ( ( jogDialShortPress_raised )
                          || ( timeoutEditMode_raised ) ) )
                {
                    exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min();
                    react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( jogDialLongPress_raised )
                    {
                        exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min();
                        ifaceConfig.ifaceConfigOperationCallback->setSleepTimeS( 600 );
                        react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                        transitioned_after = 0;
                    }
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min_react( const sc_integer transitioned_before )
{
    /* The reactions of state Show20Min. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min();
            enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min_default();
            HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialRight_raised )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min();
                enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min_default();
                HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
                transitioned_after = 0;
            }
            else
            {
                if ( ( startButtonShortPress_raised )
                     || ( ( jogDialShortPress_raised )
                          || ( timeoutEditMode_raised ) ) )
                {
                    exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min();
                    react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( jogDialLongPress_raised )
                    {
                        exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min();
                        ifaceConfig.ifaceConfigOperationCallback->setSleepTimeS( 1200 );
                        react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                        transitioned_after = 0;
                    }
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min_react( const sc_integer transitioned_before )
{
    /* The reactions of state Show30Min. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min();
            enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min_default();
            HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialRight_raised )
            {
                exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min();
                enseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min_default();
                HemroE54SystemStateMachine_AutoSleepEdit_react( 0 );
                transitioned_after = 0;
            }
            else
            {
                if ( ( startButtonShortPress_raised )
                     || ( ( jogDialShortPress_raised )
                          || ( timeoutEditMode_raised ) ) )
                {
                    exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min();
                    react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( jogDialLongPress_raised )
                    {
                        exseq_HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min();
                        ifaceConfig.ifaceConfigOperationCallback->setSleepTimeS( 1800 );
                        react_HemroE54SystemStateMachine_AutoSleepEdit_r1__exit_Default();
                        transitioned_after = 0;
                    }
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_AutoSleepEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_react( const sc_integer transitioned_before )
{
    /* The reactions of state WlanSettings. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_WlanOn_react( const sc_integer transitioned_before )
{
    /* The reactions of state WlanOn. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialRight_raised )
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn();
            enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff_default();
            HemroE54SystemStateMachine_WlanSettings_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialLeft_raised )
            {
                exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn();
                enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset_default();
                HemroE54SystemStateMachine_WlanSettings_react( 0 );
                transitioned_after = 0;
            }
            else
            {
                if ( jogDialLongPress_raised )
                {
                    exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn();
                    ifaceWifi.ifaceWifiOperationCallback->setWifiOn();
                    react_HemroE54SystemStateMachine_WlanSettings_r1__exit_Default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ( ifaceGpioDrv.startButtonReleased_raised )
                         || ( ( jogDialShortPress_raised )
                              || ( timeoutEditMode_raised ) ) )
                    {
                        exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn();
                        react_HemroE54SystemStateMachine_WlanSettings_r1__exit_Default();
                        transitioned_after = 0;
                    }
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_WlanSettings_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_WlanOff_react( const sc_integer transitioned_before )
{
    /* The reactions of state WlanOff. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialRight_raised )
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff();
            enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset_default();
            HemroE54SystemStateMachine_WlanSettings_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialLeft_raised )
            {
                exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff();
                enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn_default();
                HemroE54SystemStateMachine_WlanSettings_react( 0 );
                transitioned_after = 0;
            }
            else
            {
                if ( jogDialLongPress_raised )
                {
                    exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff();
                    ifaceWifi.ifaceWifiOperationCallback->setWifiOff();
                    react_HemroE54SystemStateMachine_WlanSettings_r1__exit_Default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ( ifaceGpioDrv.startButtonReleased_raised )
                         || ( ( jogDialShortPress_raised )
                              || ( timeoutEditMode_raised ) ) )
                    {
                        exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff();
                        react_HemroE54SystemStateMachine_WlanSettings_r1__exit_Default();
                        transitioned_after = 0;
                    }
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_WlanSettings_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_WlanReset_react( const sc_integer transitioned_before )
{
    /* The reactions of state WlanReset. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGpioDrv.jogDialRight_raised )
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset();
            enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOn_default();
            HemroE54SystemStateMachine_WlanSettings_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialLeft_raised )
            {
                exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset();
                enseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanOff_default();
                HemroE54SystemStateMachine_WlanSettings_react( 0 );
                transitioned_after = 0;
            }
            else
            {
                if ( jogDialLongPress_raised )
                {
                    exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset();
                    ifaceWifi.ifaceWifiOperationCallback->resetConfig();
                    react_HemroE54SystemStateMachine_WlanSettings_r1__exit_Default();
                    transitioned_after = 0;
                }
                else
                {
                    if ( ( ifaceGpioDrv.startButtonReleased_raised )
                         || ( ( jogDialShortPress_raised )
                              || ( timeoutEditMode_raised ) ) )
                    {
                        exseq_HemroE54SystemStateMachine_WlanSettings_r1_WlanReset();
                        react_HemroE54SystemStateMachine_WlanSettings_r1__exit_Default();
                        transitioned_after = 0;
                    }
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_WlanSettings_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit_react( const sc_integer transitioned_before )
{
    /* The reactions of state AnnounceEdit. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( jogDialLongPress_raised )
        {
            exseq_HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit();
            react_HemroE54SystemStateMachine_WlanSettings_r1__choice_0();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialReleased_raised )
            {
                exseq_HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit();
                react_HemroE54SystemStateMachine_WlanSettings_r1__exit_Default();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_WlanSettings_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_EditRecipe1_react( const sc_integer transitioned_before )
{
    /* The reactions of state EditRecipe1. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGrinder.recipeEditAborted_raised )
        {
            exseq_HemroE54SystemStateMachine_EditRecipe1();
            enseq_HemroE54SystemStateMachine_Recipe1_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGrinder.recipeEditFinished_raised )
            {
                exseq_HemroE54SystemStateMachine_EditRecipe1();
                react_HemroE54SystemStateMachine__choice_2();
                transitioned_after = 0;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_EditRecipe2_react( const sc_integer transitioned_before )
{
    /* The reactions of state EditRecipe2. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGrinder.recipeEditAborted_raised )
        {
            exseq_HemroE54SystemStateMachine_EditRecipe2();
            enseq_HemroE54SystemStateMachine_Recipe2_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGrinder.recipeEditFinished_raised )
            {
                exseq_HemroE54SystemStateMachine_EditRecipe2();
                react_HemroE54SystemStateMachine__choice_2();
                transitioned_after = 0;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_EditRecipe3_react( const sc_integer transitioned_before )
{
    /* The reactions of state EditRecipe3. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGrinder.recipeEditAborted_raised )
        {
            exseq_HemroE54SystemStateMachine_EditRecipe3();
            enseq_HemroE54SystemStateMachine_Recipe3_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGrinder.recipeEditFinished_raised )
            {
                exseq_HemroE54SystemStateMachine_EditRecipe3();
                react_HemroE54SystemStateMachine__choice_2();
                transitioned_after = 0;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_EditRecipe4_react( const sc_integer transitioned_before )
{
    /* The reactions of state EditRecipe4. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ifaceGrinder.recipeEditAborted_raised )
        {
            exseq_HemroE54SystemStateMachine_EditRecipe4();
            enseq_HemroE54SystemStateMachine_Recipe4_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ifaceGrinder.recipeEditFinished_raised )
            {
                exseq_HemroE54SystemStateMachine_EditRecipe4();
                react_HemroE54SystemStateMachine__choice_2();
                transitioned_after = 0;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_GrindManual_react( const sc_integer transitioned_before )
{
    /* The reactions of state GrindManual. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( finishGrinding_raised )
        {
            exseq_HemroE54SystemStateMachine_GrindManual();
            enseq_HemroE54SystemStateMachine_ManualMode_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGrinder.ifaceGrinderOperationCallback->isGrindStartable() ) == ( false ) )
            {
                exseq_HemroE54SystemStateMachine_GrindManual();
                enseq_HemroE54SystemStateMachine_ManualMode_default();
                transitioned_after = 0;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe4_react( const sc_integer transitioned_before )
{
    /* The reactions of state GrindRecipe4. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( finishGrinding_raised )
        {
            exseq_HemroE54SystemStateMachine_GrindRecipe4();
            enseq_HemroE54SystemStateMachine_Recipe4_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGrinder.ifaceGrinderOperationCallback->isGrindStartable() ) == ( false ) )
            {
                exseq_HemroE54SystemStateMachine_GrindRecipe4();
                enseq_HemroE54SystemStateMachine_Recipe4_default();
                transitioned_after = 0;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe3_react( const sc_integer transitioned_before )
{
    /* The reactions of state GrindRecipe3. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( finishGrinding_raised )
        {
            exseq_HemroE54SystemStateMachine_GrindRecipe3();
            enseq_HemroE54SystemStateMachine_Recipe3_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGrinder.ifaceGrinderOperationCallback->isGrindStartable() ) == ( false ) )
            {
                exseq_HemroE54SystemStateMachine_GrindRecipe3();
                enseq_HemroE54SystemStateMachine_Recipe3_default();
                transitioned_after = 0;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe2_react( const sc_integer transitioned_before )
{
    /* The reactions of state GrindRecipe2. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( finishGrinding_raised )
        {
            exseq_HemroE54SystemStateMachine_GrindRecipe2();
            enseq_HemroE54SystemStateMachine_Recipe2_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGrinder.ifaceGrinderOperationCallback->isGrindStartable() ) == ( false ) )
            {
                exseq_HemroE54SystemStateMachine_GrindRecipe2();
                enseq_HemroE54SystemStateMachine_Recipe2_default();
                transitioned_after = 0;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_GrindRecipe1_react( const sc_integer transitioned_before )
{
    /* The reactions of state GrindRecipe1. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( finishGrinding_raised )
        {
            exseq_HemroE54SystemStateMachine_GrindRecipe1();
            enseq_HemroE54SystemStateMachine_Recipe1_default();
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGrinder.ifaceGrinderOperationCallback->isGrindStartable() ) == ( false ) )
            {
                exseq_HemroE54SystemStateMachine_GrindRecipe1();
                enseq_HemroE54SystemStateMachine_Recipe1_default();
                transitioned_after = 0;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_Standby_react( const sc_integer transitioned_before )
{
    /* The reactions of state Standby. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( standbyTerminated_raised )
        {
            exseq_HemroE54SystemStateMachine_Standby();
            react_HemroE54SystemStateMachine__choice_2();
            transitioned_after = 0;
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_react( const sc_integer transitioned_before )
{
    /* The reactions of state DiscLifeTime. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel_react( const sc_integer transitioned_before )
{
    /* The reactions of state showDiscLabel. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[10] )
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel();
            enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime_default();
            HemroE54SystemStateMachine_DiscLifeTime_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGpioDrv.jogDialLeft_raised )
                 || ( ifaceGpioDrv.jogDialRight_raised ) )
            {
                exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel();
                tempDurationCounter = 0;
                enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn_default();
                HemroE54SystemStateMachine_DiscLifeTime_react( 0 );
                transitioned_after = 0;
            }
            else
            {
                if ( ( tempDurationCounter ) > ( 3 ) )
                {
                    exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel();
                    react_HemroE54SystemStateMachine_DiscLifeTime_r1__exit_Default();
                    transitioned_after = 0;
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_DiscLifeTime_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime_react( const sc_integer transitioned_before )
{
    /* The reactions of state showDiscLifeTime. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[11] )
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime();
            enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel_default();
            HemroE54SystemStateMachine_DiscLifeTime_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( ifaceGpioDrv.jogDialLeft_raised )
                 || ( ifaceGpioDrv.jogDialRight_raised ) )
            {
                exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime();
                tempDurationCounter = 0;
                enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn_default();
                HemroE54SystemStateMachine_DiscLifeTime_react( 0 );
                transitioned_after = 0;
            }
            else
            {
                if ( ( tempDurationCounter ) > ( 3 ) )
                {
                    exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime();
                    react_HemroE54SystemStateMachine_DiscLifeTime_r1__exit_Default();
                    transitioned_after = 0;
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_DiscLifeTime_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn_react( const sc_integer transitioned_before )
{
    /* The reactions of state showResetOn. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[12] )
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn();
            enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff_default();
            HemroE54SystemStateMachine_DiscLifeTime_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( tempDurationCounter ) > ( 3 ) )
            {
                exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn();
                react_HemroE54SystemStateMachine_DiscLifeTime_r1__exit_Default();
                transitioned_after = 0;
            }
            else
            {
                if ( jogDialLongPress_raised )
                {
                    exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn();
                    ifaceStatistic.ifaceStatisticOperationCallback->resetDiscLifeTime();
                    react_HemroE54SystemStateMachine_DiscLifeTime_r1__exit_Default();
                    transitioned_after = 0;
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_DiscLifeTime_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff_react( const sc_integer transitioned_before )
{
    /* The reactions of state showResetOff. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[13] )
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff();
            enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn_default();
            HemroE54SystemStateMachine_DiscLifeTime_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( tempDurationCounter ) > ( 3 ) )
            {
                exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff();
                react_HemroE54SystemStateMachine_DiscLifeTime_r1__exit_Default();
                transitioned_after = 0;
            }
            else
            {
                if ( jogDialLongPress_raised )
                {
                    exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff();
                    ifaceStatistic.ifaceStatisticOperationCallback->resetDiscLifeTime();
                    react_HemroE54SystemStateMachine_DiscLifeTime_r1__exit_Default();
                    transitioned_after = 0;
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_DiscLifeTime_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_react( const sc_integer transitioned_before )
{
    /* The reactions of state showIntro. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_DiscLifeTime_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1_react( const sc_integer transitioned_before )
{
    /* The reactions of state showDash1. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( ( tempDurationCounter ) > ( 40 ) )
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1();
            tempDurationCounter = 0;
            react_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_completed();
            transitioned_after = 0;
        }
        else
        {
            if ( ( bothButtonsReleased_raised )
                 || ( bothButtonsLongReleased_raised ) )
            {
                exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1();
                react_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_aborted();
                transitioned_after = 0;
            }
            else
            {
                if ( timeEvents[14] )
                {
                    exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1();
                    enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2_default();
                    HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_react( 0 );
                    transitioned_after = 0;
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2_react( const sc_integer transitioned_before )
{
    /* The reactions of state showDash2. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[15] )
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2();
            enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3_default();
            HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( bothButtonsReleased_raised )
                 || ( bothButtonsLongReleased_raised ) )
            {
                exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2();
                react_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_aborted();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3_react( const sc_integer transitioned_before )
{
    /* The reactions of state showDash3. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[16] )
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3();
            enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4_default();
            HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( bothButtonsReleased_raised )
                 || ( bothButtonsLongReleased_raised ) )
            {
                exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3();
                react_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_aborted();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4_react( const sc_integer transitioned_before )
{
    /* The reactions of state showDash4. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 0 ) )
    {
        if ( timeEvents[17] )
        {
            exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4();
            enseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1_default();
            HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_react( 0 );
            transitioned_after = 0;
        }
        else
        {
            if ( ( bothButtonsReleased_raised )
                 || ( bothButtonsLongReleased_raised ) )
            {
                exseq_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4();
                react_HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_aborted();
                transitioned_after = 0;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::SleepMode_NormalOperation_react( const sc_integer transitioned_before )
{
    /* The reactions of state NormalOperation. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 1 ) )
    {
        if ( timeEvents[18] )
        {
            exseq_SleepMode_NormalOperation();
            enseq_SleepMode_Standby_default();
            transitioned_after = 1;
        }
        else
        {
            if ( ( ifaceErrorCtrl.anyErrorChange_raised )
                 || ( ( ifaceGpioDrv.anyUserAction_raised )
                      || ( ifaceApplication.restartStandbyTimer_raised ) ) )
            {
                exseq_SleepMode_NormalOperation();
                enseq_SleepMode_NormalOperation_default();
                transitioned_after = 1;
            }
            else
            {
                if ( manualForceStandby_raised )
                {
                    exseq_SleepMode_NormalOperation();
                    enseq_SleepMode_Standby_default();
                    transitioned_after = 1;
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        if ( timeEvents[19] )
        {
            internalEventQueue.push_back( new SctEvent_Internal_timeoutEditMode( Internal_timeoutEditMode ) );
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::SleepMode_Standby_react( const sc_integer transitioned_before )
{
    /* The reactions of state Standby. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 1 ) )
    {
        if ( ( ifaceErrorCtrl.anyErrorChange_raised )
             || ( ifaceGpioDrv.terminateStandbyAction_raised ) )
        {
            exseq_SleepMode_Standby();
            enseq_SleepMode_NormalOperation_default();
            transitioned_after = 1;
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_BothButtonsPressed_react( const sc_integer transitioned_before )
{
    /* The reactions of state BothButtonsPressed. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 2 ) )
    {
        if ( timeEvents[20] )
        {
            exseq_KeyPressEvaluation_BothButtonsPressed();
            enseq_KeyPressEvaluation_LongPressBothButtons_default();
            transitioned_after = 2;
        }
        else
        {
            if ( ifaceGpioDrv.startButtonReleased_raised )
            {
                exseq_KeyPressEvaluation_BothButtonsPressed();
                internalEventQueue.push_back( new SctEvent_Internal_bothButtonsReleased( Internal_bothButtonsReleased ) );
                if ( ifaceTraceObserver != sc_null )
                {
                    ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress );
                }
                enseq_KeyPressEvaluation_LongPress_r2_default();
                enseq_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth_default();
                transitioned_after = 2;
            }
            else
            {
                if ( ifaceGpioDrv.jogDialReleased_raised )
                {
                    exseq_KeyPressEvaluation_BothButtonsPressed();
                    internalEventQueue.push_back( new SctEvent_Internal_bothButtonsReleased( Internal_bothButtonsReleased ) );
                    if ( ifaceTraceObserver != sc_null )
                    {
                        ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress );
                    }
                    enseq_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth_default();
                    enseq_KeyPressEvaluation_LongPress_r1_default();
                    transitioned_after = 2;
                }
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPressBothButtons_react( const sc_integer transitioned_before )
{
    /* The reactions of state LongPressBothButtons. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 2 ) )
    {
        if ( ifaceGpioDrv.startButtonReleased_raised )
        {
            exseq_KeyPressEvaluation_LongPressBothButtons();
            if ( ifaceTraceObserver != sc_null )
            {
                ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress );
            }
            enseq_KeyPressEvaluation_LongPress_r2_default();
            enseq_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth_default();
            transitioned_after = 2;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialReleased_raised )
            {
                exseq_KeyPressEvaluation_LongPressBothButtons();
                if ( ifaceTraceObserver != sc_null )
                {
                    ifaceTraceObserver->stateEntered( SystemStateMachine::KeyPressEvaluation_LongPress );
                }
                enseq_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth_default();
                enseq_KeyPressEvaluation_LongPress_r1_default();
                transitioned_after = 2;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_react( const sc_integer transitioned_before )
{
    /* The reactions of state LongPress. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 2 ) )
    {
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonError_react( const sc_integer transitioned_before )
{
    /* The reactions of state StartButtonError. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 2 ) )
    {
        if ( ifaceGpioDrv.startButtonReleased_raised )
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonError();
            enseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased_default();
            transitioned_after = 2;
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r2_LongPressStartButton_react( const sc_integer transitioned_before )
{
    /* The reactions of state LongPressStartButton. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 2 ) )
    {
        if ( timeEvents[21] )
        {
            exseq_KeyPressEvaluation_LongPress_r2_LongPressStartButton();
            enseq_KeyPressEvaluation_LongPress_r2_StartButtonError_default();
            transitioned_after = 2;
        }
        else
        {
            if ( ifaceGpioDrv.startButtonReleased_raised )
            {
                exseq_KeyPressEvaluation_LongPress_r2_LongPressStartButton();
                enseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased_default();
                transitioned_after = 2;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonPressed_react( const sc_integer transitioned_before )
{
    /* The reactions of state StartButtonPressed. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 2 ) )
    {
        if ( timeEvents[22] )
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonPressed();
            enseq_KeyPressEvaluation_LongPress_r2_LongPressStartButton_default();
            transitioned_after = 2;
        }
        else
        {
            if ( ifaceGpioDrv.startButtonReleased_raised )
            {
                exseq_KeyPressEvaluation_LongPress_r2_StartButtonPressed();
                internalEventQueue.push_back( new SctEvent_Internal_startButtonShortPress( Internal_startButtonShortPress ) );
                enseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased_default();
                transitioned_after = 2;
            }
            else
            {
                if ( ifaceGpioDrv.jogDialPressed_raised )
                {
                    exseq_KeyPressEvaluation_LongPress();
                    enseq_KeyPressEvaluation_BothButtonsPressed_default();
                    transitioned_after = 2;
                }
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonReleased_react( const sc_integer transitioned_before )
{
    /* The reactions of state StartButtonReleased. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 2 ) )
    {
        if ( ifaceGpioDrv.startButtonPressed_raised )
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased();
            enseq_KeyPressEvaluation_LongPress_r2_StartButtonPressed_default();
            transitioned_after = 2;
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth_react( const sc_integer transitioned_before )
{
    /* The reactions of state StartButtonPressedFromBoth. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 2 ) )
    {
        if ( timeEvents[23] )
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth();
            enseq_KeyPressEvaluation_LongPress_r2_StartButtonError_default();
            transitioned_after = 2;
        }
        else
        {
            if ( ifaceGpioDrv.startButtonReleased_raised )
            {
                exseq_KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth();
                enseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased_default();
                transitioned_after = 2;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth_react( const sc_integer transitioned_before )
{
    /* The reactions of state StartButtonLongPressedFromBoth. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 2 ) )
    {
        if ( ifaceGpioDrv.startButtonReleased_raised )
        {
            exseq_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth();
            enseq_KeyPressEvaluation_LongPress_r2_StartButtonReleased_default();
            transitioned_after = 2;
        }
        else
        {
            if ( timeEvents[24] )
            {
                exseq_KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth();
                enseq_KeyPressEvaluation_LongPress_r2_StartButtonError_default();
                transitioned_after = 2;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialError_react( const sc_integer transitioned_before )
{
    /* The reactions of state JogDialError. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 3 ) )
    {
        if ( ifaceGpioDrv.jogDialReleased_raised )
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialError();
            enseq_KeyPressEvaluation_LongPress_r1_JogDialReleased_default();
            KeyPressEvaluation_LongPress_react( 2 );
            transitioned_after = 3;
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = KeyPressEvaluation_LongPress_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r1_LongPressJogDial_react( const sc_integer transitioned_before )
{
    /* The reactions of state LongPressJogDial. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 3 ) )
    {
        if ( timeEvents[25] )
        {
            exseq_KeyPressEvaluation_LongPress_r1_LongPressJogDial();
            enseq_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial_default();
            KeyPressEvaluation_LongPress_react( 2 );
            transitioned_after = 3;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialReleased_raised )
            {
                exseq_KeyPressEvaluation_LongPress_r1_LongPressJogDial();
                enseq_KeyPressEvaluation_LongPress_r1_JogDialReleased_default();
                KeyPressEvaluation_LongPress_react( 2 );
                transitioned_after = 3;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = KeyPressEvaluation_LongPress_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialPressed_react( const sc_integer transitioned_before )
{
    /* The reactions of state JogDialPressed. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 3 ) )
    {
        if ( timeEvents[26] )
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialPressed();
            enseq_KeyPressEvaluation_LongPress_r1_LongPressJogDial_default();
            KeyPressEvaluation_LongPress_react( 2 );
            transitioned_after = 3;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialReleased_raised )
            {
                exseq_KeyPressEvaluation_LongPress_r1_JogDialPressed();
                internalEventQueue.push_back( new SctEvent_Internal_jogDialShortPress( Internal_jogDialShortPress ) );
                enseq_KeyPressEvaluation_LongPress_r1_JogDialReleased_default();
                KeyPressEvaluation_LongPress_react( 2 );
                transitioned_after = 3;
            }
            else
            {
                if ( ifaceGpioDrv.startButtonPressed_raised )
                {
                    exseq_KeyPressEvaluation_LongPress();
                    enseq_KeyPressEvaluation_BothButtonsPressed_default();
                    transitioned_after = 3;
                }
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = KeyPressEvaluation_LongPress_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialReleased_react( const sc_integer transitioned_before )
{
    /* The reactions of state JogDialReleased. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 3 ) )
    {
        if ( ifaceGpioDrv.jogDialPressed_raised )
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialReleased();
            enseq_KeyPressEvaluation_LongPress_r1_JogDialPressed_default();
            KeyPressEvaluation_LongPress_react( 2 );
            transitioned_after = 3;
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = KeyPressEvaluation_LongPress_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth_react( const sc_integer transitioned_before )
{
    /* The reactions of state JogDialPressedFromBoth. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 3 ) )
    {
        if ( timeEvents[27] )
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth();
            enseq_KeyPressEvaluation_LongPress_r1_JogDialError_default();
            KeyPressEvaluation_LongPress_react( 2 );
            transitioned_after = 3;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialReleased_raised )
            {
                exseq_KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth();
                enseq_KeyPressEvaluation_LongPress_r1_JogDialReleased_default();
                KeyPressEvaluation_LongPress_react( 2 );
                transitioned_after = 3;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = KeyPressEvaluation_LongPress_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth_react( const sc_integer transitioned_before )
{
    /* The reactions of state JogDialLongPressedFromBoth. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 3 ) )
    {
        if ( ifaceGpioDrv.jogDialReleased_raised )
        {
            exseq_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth();
            enseq_KeyPressEvaluation_LongPress_r1_JogDialReleased_default();
            KeyPressEvaluation_LongPress_react( 2 );
            transitioned_after = 3;
        }
        else
        {
            if ( timeEvents[28] )
            {
                exseq_KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth();
                enseq_KeyPressEvaluation_LongPress_r1_JogDialError_default();
                KeyPressEvaluation_LongPress_react( 2 );
                transitioned_after = 3;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = KeyPressEvaluation_LongPress_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial_react( const sc_integer transitioned_before )
{
    /* The reactions of state VeryLongPressJogDial. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 3 ) )
    {
        if ( timeEvents[29] )
        {
            exseq_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial();
            enseq_KeyPressEvaluation_LongPress_r1_JogDialError_default();
            KeyPressEvaluation_LongPress_react( 2 );
            transitioned_after = 3;
        }
        else
        {
            if ( ifaceGpioDrv.jogDialReleased_raised )
            {
                exseq_KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial();
                enseq_KeyPressEvaluation_LongPress_r1_JogDialReleased_default();
                KeyPressEvaluation_LongPress_react( 2 );
                transitioned_after = 3;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = KeyPressEvaluation_LongPress_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::Grinding_Grinding_react( const sc_integer transitioned_before )
{
    /* The reactions of state Grinding. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 4 ) )
    {
        if ( ( ifaceGpioDrv.portaFilterRemoved_raised )
             || ( ( startButtonShortPress_raised )
                  || ( ifaceGrinder.evtStopGrind_raised ) ) )
        {
            exseq_Grinding_Grinding();
            enseq_Grinding_SaveGrindingResults_default();
            transitioned_after = 4;
        }
        else
        {
            if ( ifaceErrorCtrl.ifaceErrorCtrlOperationCallback->isFatalErrorActive() )
            {
                exseq_Grinding_Grinding();
                enseq_Grinding_GrindingError_default();
                transitioned_after = 4;
            }
            else
            {
                if ( ifaceApplication.mainStateChanged_raised )
                {
                    exseq_Grinding_Grinding();
                    ifaceGrinder.ifaceGrinderOperationCallback->stopGrind();
                    enseq_Grinding_Idle_default();
                    transitioned_after = 4;
                }
                else
                {
                    if ( ifaceGrinder.ifaceGrinderOperationCallback->isGrindingTimeElapsed() )
                    {
                        exseq_Grinding_Grinding();
                        enseq_Grinding_SaveGrindingResults_default();
                        transitioned_after = 4;
                    }
                    else
                    {
                        if ( timeEvents[30] )
                        {
                            exseq_Grinding_Grinding();
                            ifaceGrinder.ifaceGrinderOperationCallback->inc100MsCounter();
                            enseq_Grinding_Grinding_default();
                            transitioned_after = 4;
                        }
                    }
                }
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::Grinding_GrindingError_react( const sc_integer transitioned_before )
{
    /* The reactions of state GrindingError. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 4 ) )
    {
        if ( timeEvents[31] )
        {
            exseq_Grinding_GrindingError();
            enseq_Grinding_Idle_default();
            transitioned_after = 4;
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::Grinding_Idle_react( const sc_integer transitioned_before )
{
    /* The reactions of state Idle. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 4 ) )
    {
        if ( ifaceGrinder.evtStartGrind_raised )
        {
            exseq_Grinding_Idle();
            react_Grinding__choice_0();
            transitioned_after = 4;
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::Grinding_SaveGrindingResults_react( const sc_integer transitioned_before )
{
    /* The reactions of state SaveGrindingResults. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 4 ) )
    {
        if ( ( timeEvents[32] )
             || ( ( ifaceGpioDrv.jogDialLeft_raised )
                  || ( ( ifaceGpioDrv.jogDialRight_raised )
                       || ( ifaceErrorCtrl.fatalErrorChange_raised ) ) ) )
        {
            exseq_Grinding_SaveGrindingResults();
            enseq_Grinding_Idle_default();
            transitioned_after = 4;
        }
        else
        {
            if ( ( startButtonShortPress_raised )
                 || ( portaFilterSaveInserted_raised ) )
            {
                exseq_Grinding_SaveGrindingResults();
                ifaceGrinder.ifaceGrinderOperationCallback->continueGrind();
                enseq_Grinding_Grinding_default();
                transitioned_after = 4;
            }
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::PortaFilterInsertion_Idle_react( const sc_integer transitioned_before )
{
    /* The reactions of state Idle. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 5 ) )
    {
        if ( ifaceGpioDrv.portaFilterInserted_raised )
        {
            exseq_PortaFilterInsertion_Idle();
            internalEventQueue.push_back( new SctEvent_Internal_portaFilterSaveInserted( Internal_portaFilterSaveInserted ) );
            enseq_PortaFilterInsertion_Idle_default();
            transitioned_after = 5;
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_react( const sc_integer transitioned_before )
{
    /* The reactions of state OrthogonalRecipeEdit. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 6 ) )
    {
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1_react( const sc_integer transitioned_before )
{
    /* The reactions of state EditDigit1. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 6 ) )
    {
        if ( jogDialShortPress_raised )
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1();
            enseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2_default();
            transitioned_after = 6;
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        if ( ifaceGpioDrv.jogDialRight_raised )
        {
            ifaceGrinder.ifaceGrinderOperationCallback->editIncDigit();
        }
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            ifaceGrinder.ifaceGrinderOperationCallback->editDecDigit();
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2_react( const sc_integer transitioned_before )
{
    /* The reactions of state EditDigit2. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 6 ) )
    {
        if ( jogDialShortPress_raised )
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2();
            enseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3_default();
            transitioned_after = 6;
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        if ( ifaceGpioDrv.jogDialRight_raised )
        {
            ifaceGrinder.ifaceGrinderOperationCallback->editIncDigit();
        }
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            ifaceGrinder.ifaceGrinderOperationCallback->editDecDigit();
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3_react( const sc_integer transitioned_before )
{
    /* The reactions of state EditDigit3. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 6 ) )
    {
        if ( jogDialShortPress_raised )
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3();
            enseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe_default();
            transitioned_after = 6;
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        if ( ifaceGpioDrv.jogDialRight_raised )
        {
            ifaceGrinder.ifaceGrinderOperationCallback->editIncDigit();
        }
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            ifaceGrinder.ifaceGrinderOperationCallback->editDecDigit();
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe_react( const sc_integer transitioned_before )
{
    /* The reactions of state EditRecipe. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 6 ) )
    {
        if ( jogDialShortPress_raised )
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe();
            enseq_RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1_default();
            transitioned_after = 6;
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        if ( ifaceGpioDrv.jogDialLeft_raised )
        {
            ifaceGrinder.ifaceGrinderOperationCallback->editDecRecipe();
        }
        if ( ifaceGpioDrv.jogDialRight_raised )
        {
            ifaceGrinder.ifaceGrinderOperationCallback->editIncRecipe();
        }
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe_react( const sc_integer transitioned_before )
{
    /* The reactions of state EditRecipe. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 7 ) )
    {
        if ( jogDialLongPress_raised )
        {
            exseq_RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe();
            ifaceGrinder.ifaceGrinderOperationCallback->storeRecipe();
            react_RecipeEdit_OrthogonalRecipeEdit_r2__exit_Default();
            transitioned_after = 7;
        }
        else
        {
            if ( ( startButtonShortPress_raised )
                 || ( ( ifaceErrorCtrl.fatalErrorChange_raised )
                      || ( timeoutEditMode_raised ) ) )
            {
                exseq_RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe();
                ifaceGrinder.ifaceGrinderOperationCallback->abortRecipeEdit();
                react_RecipeEdit_OrthogonalRecipeEdit_r2__exit_Default();
                transitioned_after = 7;
            }
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = RecipeEdit_OrthogonalRecipeEdit_react( transitioned_before );
    }
    return transitioned_after;
}

sc_integer SystemStateMachine::RecipeEdit_Idle_react( const sc_integer transitioned_before )
{
    /* The reactions of state Idle. */
    sc_integer transitioned_after = transitioned_before;
    if ( ( transitioned_after ) < ( 6 ) )
    {
        if ( ifaceGrinder.startRecipeEdit_raised )
        {
            exseq_RecipeEdit_Idle();
            enseq_RecipeEdit_OrthogonalRecipeEdit_default();
            react( 0 );
            transitioned_after = 6;
        }
    }
    /* If no transition was taken then execute local reactions */
    if ( ( transitioned_after ) == ( transitioned_before ) )
    {
        transitioned_after = react( transitioned_before );
    }
    return transitioned_after;
}

void SystemStateMachine::clearInEvents()
{
    ifaceApplication.initCompleted_raised        = false;
    ifaceApplication.mainStateChanged_raised     = false;
    ifaceApplication.restartStandbyTimer_raised  = false;
    ifaceApplication.forceRunCycle_raised        = false;
    ifaceGpioDrv.anyUserAction_raised            = false;
    ifaceGpioDrv.startButtonPressed_raised       = false;
    ifaceGpioDrv.startButtonReleased_raised      = false;
    ifaceGpioDrv.jogDialLeft_raised              = false;
    ifaceGpioDrv.jogDialRight_raised             = false;
    ifaceGpioDrv.jogDialPressed_raised           = false;
    ifaceGpioDrv.jogDialReleased_raised          = false;
    ifaceGpioDrv.portaFilterRemoved_raised       = false;
    ifaceGpioDrv.portaFilterInserted_raised      = false;
    ifaceGpioDrv.powerAvailable_raised           = false;
    ifaceGpioDrv.powerNotAvailable_raised        = false;
    ifaceGpioDrv.terminateStandbyAction_raised   = false;
    ifaceErrorCtrl.anyErrorChange_raised         = false;
    ifaceErrorCtrl.fatalErrorChange_raised       = false;
    ifaceErrorCtrl.significantErrorChange_raised = false;
    ifaceGrinder.evtStopGrind_raised             = false;
    ifaceGrinder.evtStartGrind_raised            = false;
    ifaceGrinder.startRecipeEdit_raised          = false;
    ifaceGrinder.recipeEditAborted_raised        = false;
    ifaceGrinder.recipeEditFinished_raised       = false;
    timeEvents[0]                                = false;
    timeEvents[1]                                = false;
    timeEvents[2]                                = false;
    timeEvents[3]                                = false;
    timeEvents[4]                                = false;
    timeEvents[5]                                = false;
    timeEvents[6]                                = false;
    timeEvents[7]                                = false;
    timeEvents[8]                                = false;
    timeEvents[9]                                = false;
    timeEvents[10]                               = false;
    timeEvents[11]                               = false;
    timeEvents[12]                               = false;
    timeEvents[13]                               = false;
    timeEvents[14]                               = false;
    timeEvents[15]                               = false;
    timeEvents[16]                               = false;
    timeEvents[17]                               = false;
    timeEvents[18]                               = false;
    timeEvents[19]                               = false;
    timeEvents[20]                               = false;
    timeEvents[21]                               = false;
    timeEvents[22]                               = false;
    timeEvents[23]                               = false;
    timeEvents[24]                               = false;
    timeEvents[25]                               = false;
    timeEvents[26]                               = false;
    timeEvents[27]                               = false;
    timeEvents[28]                               = false;
    timeEvents[29]                               = false;
    timeEvents[30]                               = false;
    timeEvents[31]                               = false;
    timeEvents[32]                               = false;
}

void SystemStateMachine::clearInternalEvents()
{
    startButtonShortPress_raised   = false;
    startButtonLongPress_raised    = false;
    portaFilterSaveInserted_raised = false;
    jogDialVeryLongPress_raised    = false;
    jogDialLongPress_raised        = false;
    jogDialShortPress_raised       = false;
    bothButtonsPressed_raised      = false;
    bothButtonsReleased_raised     = false;
    bothButtonsLongPress_raised    = false;
    bothButtonsLongReleased_raised = false;
    manualForceStandby_raised      = false;
    finishGrinding_raised          = false;
    standbyStarted_raised          = false;
    standbyTerminated_raised       = false;
    timeoutEditMode_raised         = false;
}

void SystemStateMachine::microStep()
{
    sc_integer transitioned = -1;
    stateConfVectorPosition = 0;
    switch ( stateConfVector[ 0 ] )
    {
        case HemroE54SystemStateMachine_Init:
        {
            transitioned = HemroE54SystemStateMachine_Init_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_ManualMode:
        {
            transitioned = HemroE54SystemStateMachine_ManualMode_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_Recipe4:
        {
            transitioned = HemroE54SystemStateMachine_Recipe4_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_Recipe3:
        {
            transitioned = HemroE54SystemStateMachine_Recipe3_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_Recipe2:
        {
            transitioned = HemroE54SystemStateMachine_Recipe2_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_Recipe1:
        {
            transitioned = HemroE54SystemStateMachine_Recipe1_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_DisplayTest:
        {
            transitioned = HemroE54SystemStateMachine_DisplayTest_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_WiFi:
        {
            transitioned = HemroE54SystemStateMachine_WiFi_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_Errors:
        {
            transitioned = HemroE54SystemStateMachine_Errors_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner1_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner2_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowBanner3_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_Show5Min_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_Show3Min_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro1_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro2_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro3_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_ShowIntro4_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_Show10Min_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_Show20Min_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min:
        {
            transitioned = HemroE54SystemStateMachine_AutoSleepEdit_r1_Show30Min_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanOn:
        {
            transitioned = HemroE54SystemStateMachine_WlanSettings_r1_WlanOn_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanOff:
        {
            transitioned = HemroE54SystemStateMachine_WlanSettings_r1_WlanOff_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_WlanReset:
        {
            transitioned = HemroE54SystemStateMachine_WlanSettings_r1_WlanReset_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit:
        {
            transitioned = HemroE54SystemStateMachine_WlanSettings_r1_AnnounceEdit_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_EditRecipe1:
        {
            transitioned = HemroE54SystemStateMachine_EditRecipe1_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_EditRecipe2:
        {
            transitioned = HemroE54SystemStateMachine_EditRecipe2_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_EditRecipe3:
        {
            transitioned = HemroE54SystemStateMachine_EditRecipe3_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_EditRecipe4:
        {
            transitioned = HemroE54SystemStateMachine_EditRecipe4_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_GrindManual:
        {
            transitioned = HemroE54SystemStateMachine_GrindManual_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_GrindRecipe4:
        {
            transitioned = HemroE54SystemStateMachine_GrindRecipe4_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_GrindRecipe3:
        {
            transitioned = HemroE54SystemStateMachine_GrindRecipe3_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_GrindRecipe2:
        {
            transitioned = HemroE54SystemStateMachine_GrindRecipe2_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_GrindRecipe1:
        {
            transitioned = HemroE54SystemStateMachine_GrindRecipe1_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_Standby:
        {
            transitioned = HemroE54SystemStateMachine_Standby_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel:
        {
            transitioned = HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLabel_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime:
        {
            transitioned = HemroE54SystemStateMachine_DiscLifeTime_r1_showDiscLifeTime_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn:
        {
            transitioned = HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOn_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff:
        {
            transitioned = HemroE54SystemStateMachine_DiscLifeTime_r1_showResetOff_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1:
        {
            transitioned = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash1_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2:
        {
            transitioned = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash2_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3:
        {
            transitioned = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash3_react( transitioned );
            break;
        }
        case HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4:
        {
            transitioned = HemroE54SystemStateMachine_DiscLifeTime_r1_showIntro_r1_showDash4_react( transitioned );
            break;
        }
        default:
            break;
    }
    if ( ( stateConfVectorPosition ) < ( 1 ) )
    {
        switch ( stateConfVector[ 1 ] )
        {
            case SleepMode_NormalOperation:
            {
                transitioned = SleepMode_NormalOperation_react( transitioned );
                break;
            }
            case SleepMode_Standby:
            {
                transitioned = SleepMode_Standby_react( transitioned );
                break;
            }
            default:
                break;
        }
    }
    if ( ( stateConfVectorPosition ) < ( 2 ) )
    {
        switch ( stateConfVector[ 2 ] )
        {
            case KeyPressEvaluation_BothButtonsPressed:
            {
                transitioned = KeyPressEvaluation_BothButtonsPressed_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPressBothButtons:
            {
                transitioned = KeyPressEvaluation_LongPressBothButtons_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r2_StartButtonError:
            {
                transitioned = KeyPressEvaluation_LongPress_r2_StartButtonError_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r2_LongPressStartButton:
            {
                transitioned = KeyPressEvaluation_LongPress_r2_LongPressStartButton_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r2_StartButtonPressed:
            {
                transitioned = KeyPressEvaluation_LongPress_r2_StartButtonPressed_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r2_StartButtonReleased:
            {
                transitioned = KeyPressEvaluation_LongPress_r2_StartButtonReleased_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth:
            {
                transitioned = KeyPressEvaluation_LongPress_r2_StartButtonPressedFromBoth_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth:
            {
                transitioned = KeyPressEvaluation_LongPress_r2_StartButtonLongPressedFromBoth_react( transitioned );
                break;
            }
            default:
                break;
        }
    }
    if ( ( stateConfVectorPosition ) < ( 3 ) )
    {
        switch ( stateConfVector[ 3 ] )
        {
            case KeyPressEvaluation_LongPress_r1_JogDialError:
            {
                transitioned = KeyPressEvaluation_LongPress_r1_JogDialError_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r1_LongPressJogDial:
            {
                transitioned = KeyPressEvaluation_LongPress_r1_LongPressJogDial_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r1_JogDialPressed:
            {
                transitioned = KeyPressEvaluation_LongPress_r1_JogDialPressed_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r1_JogDialReleased:
            {
                transitioned = KeyPressEvaluation_LongPress_r1_JogDialReleased_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth:
            {
                transitioned = KeyPressEvaluation_LongPress_r1_JogDialPressedFromBoth_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth:
            {
                transitioned = KeyPressEvaluation_LongPress_r1_JogDialLongPressedFromBoth_react( transitioned );
                break;
            }
            case KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial:
            {
                transitioned = KeyPressEvaluation_LongPress_r1_VeryLongPressJogDial_react( transitioned );
                break;
            }
            default:
                break;
        }
    }
    if ( ( stateConfVectorPosition ) < ( 4 ) )
    {
        switch ( stateConfVector[ 4 ] )
        {
            case Grinding_Grinding:
            {
                transitioned = Grinding_Grinding_react( transitioned );
                break;
            }
            case Grinding_GrindingError:
            {
                transitioned = Grinding_GrindingError_react( transitioned );
                break;
            }
            case Grinding_Idle:
            {
                transitioned = Grinding_Idle_react( transitioned );
                break;
            }
            case Grinding_SaveGrindingResults:
            {
                transitioned = Grinding_SaveGrindingResults_react( transitioned );
                break;
            }
            default:
                break;
        }
    }
    if ( ( stateConfVectorPosition ) < ( 5 ) )
    {
        switch ( stateConfVector[ 5 ] )
        {
            case PortaFilterInsertion_Idle:
            {
                transitioned = PortaFilterInsertion_Idle_react( transitioned );
                break;
            }
            default:
                break;
        }
    }
    if ( ( stateConfVectorPosition ) < ( 6 ) )
    {
        switch ( stateConfVector[ 6 ] )
        {
            case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1:
            {
                transitioned = RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit1_react( transitioned );
                break;
            }
            case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2:
            {
                transitioned = RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit2_react( transitioned );
                break;
            }
            case RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3:
            {
                transitioned = RecipeEdit_OrthogonalRecipeEdit_r1_EditDigit3_react( transitioned );
                break;
            }
            case RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe:
            {
                transitioned = RecipeEdit_OrthogonalRecipeEdit_r1_EditRecipe_react( transitioned );
                break;
            }
            case RecipeEdit_Idle:
            {
                transitioned = RecipeEdit_Idle_react( transitioned );
                break;
            }
            default:
                break;
        }
    }
    if ( ( stateConfVectorPosition ) < ( 7 ) )
    {
        switch ( stateConfVector[ 7 ] )
        {
            case RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe:
            {
                transitioned = RecipeEdit_OrthogonalRecipeEdit_r2_EditRecipe_react( transitioned );
                break;
            }
            default:
                break;
        }
    }
}

void SystemStateMachine::runCycle()
{
    /* Performs a 'run to completion' step. */
    if ( isExecuting )
    {
        return;
    }
    isExecuting = true;
    dispatch_event( getNextEvent() );
    do
    {
        microStep();
        clearInEvents();
        clearInternalEvents();
        dispatch_event( getNextEvent() );
    } while ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ifaceApplication.initCompleted_raised )
                                                                                                                                                          || ( ifaceApplication.mainStateChanged_raised ) )
                                                                                                                                                        || ( ifaceApplication.restartStandbyTimer_raised ) )
                                                                                                                                                      || ( ifaceApplication.forceRunCycle_raised ) )
                                                                                                                                                    || ( ifaceGpioDrv.anyUserAction_raised ) )
                                                                                                                                                  || ( ifaceGpioDrv.startButtonPressed_raised ) )
                                                                                                                                                || ( ifaceGpioDrv.startButtonReleased_raised ) )
                                                                                                                                              || ( ifaceGpioDrv.jogDialLeft_raised ) )
                                                                                                                                            || ( ifaceGpioDrv.jogDialRight_raised ) )
                                                                                                                                          || ( ifaceGpioDrv.jogDialPressed_raised ) )
                                                                                                                                        || ( ifaceGpioDrv.jogDialReleased_raised ) )
                                                                                                                                      || ( ifaceGpioDrv.portaFilterRemoved_raised ) )
                                                                                                                                    || ( ifaceGpioDrv.portaFilterInserted_raised ) )
                                                                                                                                  || ( ifaceGpioDrv.powerAvailable_raised ) )
                                                                                                                                || ( ifaceGpioDrv.powerNotAvailable_raised ) )
                                                                                                                              || ( ifaceGpioDrv.terminateStandbyAction_raised ) )
                                                                                                                            || ( ifaceErrorCtrl.anyErrorChange_raised ) )
                                                                                                                          || ( ifaceErrorCtrl.fatalErrorChange_raised ) )
                                                                                                                        || ( ifaceErrorCtrl.significantErrorChange_raised ) )
                                                                                                                      || ( ifaceGrinder.evtStopGrind_raised ) )
                                                                                                                    || ( ifaceGrinder.evtStartGrind_raised ) )
                                                                                                                  || ( ifaceGrinder.startRecipeEdit_raised ) )
                                                                                                                || ( ifaceGrinder.recipeEditAborted_raised ) )
                                                                                                              || ( ifaceGrinder.recipeEditFinished_raised ) )
                                                                                                            || ( startButtonShortPress_raised ) )
                                                                                                          || ( startButtonLongPress_raised ) )
                                                                                                        || ( portaFilterSaveInserted_raised ) )
                                                                                                      || ( jogDialVeryLongPress_raised ) )
                                                                                                    || ( jogDialLongPress_raised ) )
                                                                                                  || ( jogDialShortPress_raised ) )
                                                                                                || ( bothButtonsPressed_raised ) )
                                                                                              || ( bothButtonsReleased_raised ) )
                                                                                            || ( bothButtonsLongPress_raised ) )
                                                                                          || ( bothButtonsLongReleased_raised ) )
                                                                                        || ( manualForceStandby_raised ) )
                                                                                      || ( finishGrinding_raised ) )
                                                                                    || ( standbyStarted_raised ) )
                                                                                  || ( standbyTerminated_raised ) )
                                                                                || ( timeoutEditMode_raised ) )
                                                                              || ( timeEvents[0] ) )
                                                                            || ( timeEvents[1] ) )
                                                                          || ( timeEvents[2] ) )
                                                                        || ( timeEvents[3] ) )
                                                                      || ( timeEvents[4] ) )
                                                                    || ( timeEvents[5] ) )
                                                                  || ( timeEvents[6] ) )
                                                                || ( timeEvents[7] ) )
                                                              || ( timeEvents[8] ) )
                                                            || ( timeEvents[9] ) )
                                                          || ( timeEvents[10] ) )
                                                        || ( timeEvents[11] ) )
                                                      || ( timeEvents[12] ) )
                                                    || ( timeEvents[13] ) )
                                                  || ( timeEvents[14] ) )
                                                || ( timeEvents[15] ) )
                                              || ( timeEvents[16] ) )
                                            || ( timeEvents[17] ) )
                                          || ( timeEvents[18] ) )
                                        || ( timeEvents[19] ) )
                                      || ( timeEvents[20] ) )
                                    || ( timeEvents[21] ) )
                                  || ( timeEvents[22] ) )
                                || ( timeEvents[23] ) )
                              || ( timeEvents[24] ) )
                            || ( timeEvents[25] ) )
                          || ( timeEvents[26] ) )
                        || ( timeEvents[27] ) )
                      || ( timeEvents[28] ) )
                    || ( timeEvents[29] ) )
                  || ( timeEvents[30] ) )
                || ( timeEvents[31] ) )
              || ( timeEvents[32] ) );
    isExecuting = false;
}

void SystemStateMachine::enter()
{
    /* Activates the state machine. */
    if ( isExecuting )
    {
        return;
    }
    isExecuting = true;
    /* Default enter sequence for statechart SystemStateMachine */
    enseq_HemroE54SystemStateMachine_default();
    enseq_SleepMode_default();
    enseq_KeyPressEvaluation_default();
    enseq_Grinding_default();
    enseq_PortaFilterInsertion_default();
    enseq_RecipeEdit_default();
    isExecuting = false;
}

void SystemStateMachine::exit()
{
    /* Deactivates the state machine. */
    if ( isExecuting )
    {
        return;
    }
    isExecuting = true;
    /* Default exit sequence for statechart SystemStateMachine */
    exseq_HemroE54SystemStateMachine();
    exseq_SleepMode();
    exseq_KeyPressEvaluation();
    exseq_Grinding();
    exseq_PortaFilterInsertion();
    exseq_RecipeEdit();
    isExecuting = false;
}
