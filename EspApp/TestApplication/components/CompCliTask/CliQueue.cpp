/*
 * CliQueue.cpp
 *
 *  Created on: 19.11.2019
 *      Author: mschmidl
 */

#include "CliQueue.h"
#include <string.h>

#include "E54AppGlobals.h"

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

CliQueue::CliQueue()
: FreeRtosQueue( 20,
                 sizeof( cliQm_Message ),
                 "cliQueue" )
{
    
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

CliQueue::~CliQueue()
{
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

BaseType_t CliQueue::sendTypeEvent( const int nMessageId )
{
    cliQm_Message message;

    message.type = static_cast<cliQm_MessageType>( nMessageId );

    return send( &message );
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

BaseType_t CliQueue::sendTypeEventFromIsr( const int nMessageId )
{
    cliQm_Message message;

    message.type = static_cast<cliQm_MessageType>( nMessageId );

    return sendFromIsr( &message );
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

BaseType_t CliQueue::sendUartCmd( const char *szReceivedCmd )
{
    cliQm_Message message;

    message.type = cliQm_MessageType_NEWCMD;
    strncpy( message.payload.cliNewCmdTypePayloadView.szCmd, szReceivedCmd, MAX_CLI_CMD_LEN );
    message.payload.cliNewCmdTypePayloadView.szCmd[ MAX_CLI_CMD_LEN - 1] = '\0';
    return send( &message );
}

/*!************************************************************************************************************************************************************
 *
 *************************************************************************************************************************************************************/

